[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2024-03-05 11:29:36.408803",
  "name": "Lead-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\nvar email1;\n\nvar t1;\n\nvar f1=[];\n\nfrappe.ui.form.on('Lead',\n{\n    onload(frm)\n    {\n        t1=frm.doc.contactdate\n        frm.page.sidebar.remove();\n        \n        if(frm.doc.email_id !==undefined)\n         {\n            email1= frm.doc.email_id;  \n         }\n         else\n         {\n             email1=undefined;\n         }\n         \n         if(frm.doc.company ==\"Confederate CA\")\n         {\n             frm.set_value(\"naming_series\",\"CF-DXB-.YYYY.-\");\n         }\n         else\n         {\n             frm.set_value(\"naming_series\",\"CF-EKM-.YYYY.-\"); \n         }\n         \n         \n    },\n     \n     refresh(frm)\n     {\n         \n//          frm.add_custom_button('Time Sheet'),function()\n// { msgprint(\"hi\")\n// }\n         \n         var g1=frm.doc.next_contact_employee\n         \n         if(g1==undefined)\n         {\n             frm.add_custom_button('Follow Up', () => {\n                    let d = new frappe.ui.Dialog({\n                                        title: 'Enter Details of employee',\n                                        fields: [\n                                            {\n                                                label: 'Contact By',\n                                                fieldname: 'contact_by',\n                                                fieldtype: 'Link',\n                                                options:\"Employee\"\n                                            },\n                                            // {\n                                            //     label: 'Contact Name',\n                                            //     fieldname: 'name',\n                                            //     fieldtype: 'Data'\n                                            // },\n                                            {\n                                                label: 'Contact Date',\n                                                fieldname: 'contact_date',\n                                                fieldtype: 'Date'\n                                            },\n                                            {\n                                                label: 'Contact Time',\n                                                fieldname: 'contact_time',\n                                                fieldtype: 'Time'\n                                            }\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) {\n                                            console.log(values);\n                                            frm.set_value(\"status\",\"Scheduled\")\n                                            frm.set_value(\"next_contact_employee\",values.contact_by)\n                                            frm.set_value(\"contactdate\",values.contact_date)\n                                             frm.set_value(\"first_contact_date\",values.contact_date)\n                                            frm.set_value(\"contact_time\",values.contact_time)\n                                            \n                                            \n                                            // var child = cur_frm.add_child(\"persons\");\n                                            // frappe.model.set_value(child.doctype, child.name, \"employee_id\",values.contact_by);\n                                            // frappe.model.set_value(child.doctype, child.name, \"contact_date\",values.contact_date);\n                                            // frappe.model.set_value(child.doctype, child.name, \"contact_time\",values.contact_time);\n                                            \n                                            // cur_frm.refresh_field(\"persons\");\n                                            \n                                            frm.save();\n                                            \n                                            console.log(\"KKKKK\")\n                                            d.hide();\n                                            \n                                            \n                                        }\n                                        \n                                        \n                                        \n                                    });\n                                    d.show();\n                    })\n                    \n         }          \n                    \n                    \n                    \n            frm.add_custom_button(\"Meeting Updates\", () => {\n                \n                var u1=frm.doc.meeting_updates1\n                f1.push(u1)\n                \n                var u2=frm.doc.next_contact_employee\n                //console.log(f1,\">>>>>>>>>\")\n                    let d = new frappe.ui.Dialog({\n                                        title: 'Enter Meeting Updates',\n                                        fields: [\n                                            // {\n                                            //     label: 'Contact By',\n                                            //     fieldname: 'contact_by',\n                                            //     fieldtype: 'Link',\n                                            //     options:\"Employee\"\n                                            // },\n                                            // {\n                                            //     label: 'Contact Name',\n                                            //     fieldname: 'name',\n                                            //     fieldtype: 'Data'\n                                            // },\n                                            {\n                                                label: 'Contact Date',\n                                                fieldname: 'contact_date',\n                                                fieldtype: 'Date'\n                                            },\n                                            {\n                                                label: 'Contact Time',\n                                                fieldname: 'contact_time',\n                                                fieldtype: 'Time'\n                                            },\n                                            \n                                            // {\n                                            //     label: 'Feasibility',\n                                            //     fieldname: 'feasibility',\n                                            //     fieldtype: 'Select',\n                                            //     options:\"A\"\n                                            // },\n                                            \n                                            {\n                                                label: 'Feasibility( % on 100 )',\n                                                fieldname: 'feasibility',\n                                                fieldtype: 'Data'\n                                            },\n                                            \n                                            {\n                                                label: 'Meeting Updates',\n                                                fieldname: 'meeting_updates',\n                                                fieldtype: 'Small Text'\n                                            },\n                                            \n                                            \n                                            \n                                            \n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) {\n                                            console.log(values);\n                                            \n                                            \n                                            //var l1=values.meeting_updates\n                                            \n                                            var v1=values.contact_date+\":\"+\"-\"+values.meeting_updates\n                                            f1.push(v1)\n                                            //console.log(f1.join('\\r\\n'))\n                                             //frm.set_value(\"feasibility\",values.feasibility)\n                                            frm.set_value(\"meeting_updates1\",f1.join('\\r\\n'))\n                                            //frm.set_value(\"meeting_updates1\",values.meeting_updates+u1)\n                                            //frm.set_value(\"meeting_updates1\",values.meeting updates)\n                                            // frm.set_value(\"contactdate\",values.contact_date)\n                                            // frm.set_value(\"contact_time\",values.contact_time)\n                                            frm.set_value(\"feasibility\",values.feasibility)\n                                            \n                                            var child = cur_frm.add_child(\"persons\");\n                                            frappe.model.set_value(child.doctype, child.name, \"employee_id\",u2);\n                                            frappe.model.set_value(child.doctype, child.name, \"contact_date\",values.contact_date);\n                                            frappe.model.set_value(child.doctype, child.name, \"contact_time\",values.contact_time);\n                                            \n                                            cur_frm.refresh_field(\"persons\");\n                                            \n                                            frm.save();\n                                            \n                                            //console.log(\"KKKKK\")\n                                            d.hide();\n                                            \n                                            f1=[]\n                                            \n                                            \n                                        }\n                                        \n                                        \n                                        \n                                    });\n                                    d.show();\n                    })\n\n         frm.change_custom_button_type('Follow Up', null, 'primary');\n         frm.change_custom_button_type('Meeting Updates', null, 'primary');\n         \n         cur_frm.dashboard.hide()\n         \n            frm.page.sidebar.remove();\n            \n             \n         \n         \n         \n         setTimeout(() =>{\n             frm.set_df_property(\"naming_series\",\"hidden\",1)\n            cur_frm.page.remove_inner_button(__('Opportunity'),  __('Create'));\n         },10);\n          $(\"[data-doctype='Quotation']\").hide();\n     },\n     \n     before_save:function(frm) \n     {\n         if(frm.doc.contactdate < get_today())\n            {\n                frappe.throw(\"You can't schedule the meeting for a past date. \");\n                return false; \n            }\n            \n          \n            var t2=frm.doc.contactdate\n            console.log(t2,'-------------------')\n            \n            // if(t1==t2)\n            // {\n            //     console.log(\"YES\")\n                \n            //     var child = cur_frm.add_child(\"persons\");\n            //     console.log(t2,\"___________\")\n            //     //frappe.model.set_value(child.doctype, child.name, \"employee_id\",\"CF-DXB-EMP-00004\");\n            //     //frappe.model.set_value(child.doctype, child.name, \"contact_date\",t2);\n            //     //frappe.model.set_value(child.doctype, child.name, \"contact_time\",values.contact_time);\n                                            \n            //   // cur_frm.refresh_field(\"persons\");\n                \n            // }\n            // else\n            // {\n            //     console.log(\"NO\")\n            // }\n            \n            \n            \n            \n    \n    \n    },\n    \n    company(frm)\n    {\n       if(frm.doc.company ==\"Confederate CA\")\n         {\n             frm.set_value(\"naming_series\",\"CF-DXB-.YYYY.-\");\n         }\n         else\n         {\n             frm.set_value(\"naming_series\",\"CF-EKM-.YYYY.-\"); \n         }  \n    },\n   \n//   validate:function(frm) {\n//  if (frm.doc.mobile_no.length != 10)\n//  {\n//             frappe.msgprint(__(\"Enter a valid phone Number\"));\n//             frappe.validated = false;\n//         }\n\n// },\n   \n    contactdate:function(frm) \n    {\n        var date = new Date(frm.doc.contactdate).toISOString().slice(0,10);\n        //console.log(date);\n            if (date == get_today()) \n            {\n              // frappe.msgprint(__(\"meeting scheduled Today\"));\n                frm.set_value(\"meeting_scheduled_today\",1) \n            }\n            else\n            {\n                frm.set_value(\"meeting_scheduled_today\",0) \n            }\n            \n            \n                    // const date = new Date(d);\n                    // const dateCopy = new Date(date.getTime());\n                    // dateCopy.setDate(dateCopy.getDate() + 180);\n                    \n                    \n                    //  var ned=dateFormat(dateCopy, 'dd-MM-yyyy')\n                    //  console.log('\"180 DAy',ned);\n            \n            //console.log(\"KKKKKKKLLLLLLL\")\n    },\n\n\n\tfeasibility:function(frm)\n\t{\n\t   if(frm.doc.feasibility >=70 )\n\t   {\n\t       frm.set_value(\"class1\",\"A\")\n\t   }\n\t   else if(frm.doc.feasibility >=50 && frm.doc.feasibility <70) \n\t   {\n\t       frm.set_value(\"class1\",\"B\")\n\t   }\n\t   else if(frm.doc.feasibility <50)\n\t   {\n\t       frm.set_value(\"class1\",\"C\")\n\t   }\n\t    \n\t},\n\t\n\t\n\n \n\tafter_save:function(frm)\n\t{\n\t    \n\t \n\t         \n        if(email1 !==undefined)\n\t    {\n\t        console.log(\"step1\")\n\t        if(email1!==frm.doc.email_id)\n\t        {\n\t            console.log(\"step2\")\n                \n                console.log(\"email1\",email1)\n                // frappe.call\n                // ({\n                //     method: \"frappe.client.get_list\",\n                //     args: {\n                //         \"doctype\":\"User\",\n                //       \"filters\":\n                //          {\n                //           email:email1,\n                           \n                //          },\n                //     },\n                //     callback(r) \n                //     {\n                //         if(r.message[0])\n                //         {\n                //             console.log(\"rrrrrr\",r.message[0].name)\n                            \n                //              frappe.call\n                //              ({\n                //                 method: \"frappe.client.get_list\",\n                //                 args: {\n                //                     \"doctype\":\"User Permission\",\n                //                   \"filters\":\n                //                      {\n                //                       user:email1,\n                //                      },\n                //                 },\n                //                 callback(s) \n                //                 {\n                //                     console.log(\"sssss\",s)\n                //                     if(s.message[0])\n                //                     {\n                //                         frappe.db.delete_doc(\"User Permission\",s.message[0].name);  \n                                       \n                //                     }\n                                    \n                //                      frappe.db.delete_doc(\"User\",r.message[0].name);\n                //                 }\n                //              });\n                //         }\n                        \n                        email1=frm.doc.email_id; \n                        frappe.db.insert\n                        ({\n                            doctype:'User',\n                            first_name:frm.doc.lead_name,\n                            email:frm.doc.email_id,\n                            company:frm.doc.company,\n                            send_welcome_email:0,\n                        })\n                        \n                        \n                //     }\n                // })\n                // .then\n                // {\n                //     console.log(\"step6\")\n                        \n                // }\n\t        }\n\t    }\n\t    else\n\t    {\n\t        console.log(\"step4\");\n\t        \n\t         frappe.db.insert\n             ({\n                doctype:'User',\n                first_name:frm.doc.lead_name,\n                email:frm.doc.email_id,\n                send_welcome_email:0\n              })\n              .then\n              {\n                  email1=frm.doc.email_id;\n              }\n\t    }  \n\t\n\t    //console.log(frm.doc.company)\n\t   // var v = frm.doc.company\n\t   //// frm.set_value(\"frm.doc.office\",v);\n\t   \n\t    \n// \t         frappe.call\n//             ({\n//                             \"method\":\"frappe.client.get\",\n//                             \"args\":\n//                                 {\n//                                     \"doctype\":\"Event\",\n//                                     \"filters\":{\"starts_on\":frm.doc.contact_date},\n                                  \n//                                 },\n//                             callback:function(d)\n//                             {\n                             \n//                             if(d){\n//                                 console.log(d);\n//                               var ty=d.message.name\n//                               console.log(ty)\n                                \n// //         if(frm.doc.class1===\"A\")\n// //          {\n// //     //   // console.log(frm.doc.event_)\n// //                          frappe.db.set_value('Event',ty,{\n// //                              \"repeat_this_event\":1,\n// //                              \"repeat_on\":\"Weekly\",\n// //                             \"monday\":1,\n                            \n                             \n// //                          })\n// //                         frm.reload_doc()\n// //              // msgprint(\"Repeat Event A\")\n// // \t        }\n\t        \n// // \t              else  if(frm.doc.class1===\"B\")\n// //          {\n// //     //   // console.log(frm.doc.event_)\n// //                          frappe.db.set_value('Event',ty,{\n// //                              \"repeat_this_event\":1,\n// //                              \"repeat_on\":\"Biweekly\",\n// //                             //\"monday\":1,\n                             \n// //                          })\n// //                         frm.reload_doc()\n// //              // msgprint(\"Repeat Event B\")\n// // \t}\n\t\n// // \t    else  if(frm.doc.class1===\"C\")\n// //          {\n// //     //   // console.log(frm.doc.event_)\n// //                          frappe.db.set_value('Event',ty,{\n// //                              \"repeat_this_event\":1,\n// //                              \"repeat_on\":\"Monthly\",\n                            \n                             \n// //                          })\n// //                         frm.reload_doc()\n// //              // msgprint(\"Repeat Event C\")\n// // \t}     \n\t        \n\t        \n// \t                            }\n\n                \n              \n                \n           \n                \n//                             }\n              \n//           })\n        //  console.log(frm.doc.email_id,\"user id .........\")       \n        // console.log(\"lead are....\",frm.doc.lead_name )\n        \n    //     if(email !==undefined)\n\t   // {\n\t   //     console.log(\"step1\")\n\t   //     if(email!==frm.doc.email_id)\n\t   //     {\n\t   //         console.log(\"step2\")\n\t   //         frappe.db.insert\n    //             ({\n    //                 doctype:'User',\n    //                 first_name:frm.doc.lead_name,\n    //                 email:frm.doc.email_id,\n    //               // company:frm.doc.company,\n    //                 send_welcome_email:0,\n    //             })\n    //             .then\n    //             {\n    //                 console.log(\"step3\")\n    //                 frm.reload_doc();  \n    //             }\n    //           // frappe.db.delete_doc(\"User\",email);\n    //           //email=frm.doc.email_id;\n\t   //     }\n\t   // }\n\t   // else\n\t   // {\n\t   //     console.log(\"step4\")\n\t   //    frappe.db.insert\n    //       ({\n    //             doctype:'User',\n    //             first_name:frm.doc.lead_name,\n    //             mail:frm.doc.email_id,\n    //             company:frm.doc.company,\n    //             send_welcome_email:0,\n    //         })\n    //         .then\n    //         {\n    //             console.log(\"step5\")\n    //             //email=frm.doc.email_id;\n    //             frm.reload_doc();  \n    //         }\n             \n\t   // }  \n\t\n        \n        \n\t   //  frappe.db.insert\n    //      ({\n    //         doctype:'User',\n    //         first_name:frm.doc.lead_name,\n    //         email:frm.doc.email_id,\n    //         send_welcome_email:0\n    //       }).\n        //   then\n        //   {\n           \n          //}\n          \n          \n\n      // msgprint(\"User Added\")\n \n\t    \n\t    \n\t    \n\t}\n\n\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2022-07-13 10:53:24.092456",
  "name": "Payment Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\nvar s;\nvar y;\nvar x;\nvar d;\nvar t=[];\nvar month1;\nvar c;\n\nfrappe.ui.form.on('Payment Entry',\n{\n    refresh(frm)\n    {\n       cur_frm.dashboard.hide(); \n       \n       \n    \n\t    \n\t    if(frm.doc.company==\"Confederate In\")\n\t    {\n\t       frm.set_value(\"naming_series\",\"EKM-PAY-.YYYY.-\") \n\t    }\n\t    else\n\t    {\n\t     frm.set_value(\"naming_series\",\"DXB-PAY-.YYYY.-\") \n\t    \n\t    }\n\t\t// your code here\n\n    },\n    \n\ton_submit(frm) \n\t{\n\t   // console.log(\"frm.doc.paid_amount\",frm.doc.paid_amount)\n\t   // console.log(\"frm.doc.references[0].outstanding_amount\",frm.doc.references[0].outstanding_amount)\n\t    \n\t    \n\t   //  if(frm.doc.paid_amount<frm.doc.references[0].outstanding_amount)\n\t     if(frm.doc.references[0].outstanding_amount>0)\n\t     {\n\t         s=\"Partially Paid\";\n\t     }\n\t     else\n\t     {\n\t         s=\"Paid\";\n\t     }\n\n\t         \n\t         frappe.call\n\t         ({\n                \"method\": \"frappe.client.get\",\n                \"args\": \n                {\n                    \"doctype\": \"Sales Invoice\",\n                    \"filters\": {\"name\":frm.doc.references[0].reference_name},\n                },\n                callback:function(d)\n                {\n                    if(d)\n                    {\n                        month1=d.message.month;\n                        \n                        //console.log(d.message.items);\n                        $.each(d.message.items,function(i,v)\n                        {\n                            //console.log(v.item_code);\n                            t[i]=v.item_code;\n                            \n                        });\n                          c=d.message.customer;\n                          y=d.message.year;\n                          frm.trigger('monthandyear');\n                          frm.trigger('filtertask');\n                       \n                    }\n                   \n                }\n             });\n             \n\t},\n\t\n  monthandyear:function(frm)\n  {\n    \n\t  \n\t    if(month1===\"January\")\n        {\n            x=\"01\";\n        }\n        else if(month1===\"February\")\n        {\n          x=\"02\";  \n        }\n        else if(month1===\"March\")\n        {\n            x=\"03\";\n        }\n        else if(month1===\"April\")\n        {\n            x=\"04\";\n        }\n        else if(month1===\"May\")\n        {\n            x=\"05\";\n        }\n        else if(month1===\"June\")\n        {\n            x=\"06\";\n        }\n        else if(month1===\"July\")\n        {\n            x=\"07\";\n        }\n\t    else if(month1===\"August\")\n        {\n            x=\"08\";\n        }\n        else if(month1===\"September\")\n        {\n            x=\"09\";\n        }\n        else if(month1===\"October\")\n        {\n            x=\"10\";\n        }\n        else if(month1===\"November\")\n        {\n            x=\"11\";\n        }\n        else if(month1===\"December\")\n        {\n            x=\"12\";\n        }\n        \n        d = new Date(y,x,0).getDate();\n\n  },\n  \n  filtertask:function(frm)\n  {\n                        if(t !==undefined)\n                        {\n                           \n                            for(var i=0;i<t.length;i++)\n                             {\n                                   frappe.call\n\t                                ({\n                                        \"method\": \"frappe.client.get_list\",\n                                        \"args\": \n                                        {\n                                            \"doctype\": \"Task\",\n                                            \"filters\": \n                                            [   \n                                                [\"subject\",\"=\",t[i]],\n                                                ['customer', \"=\",c], \n                                                ['created_date', \"between\", [y+'-'+x+'-'+\"01\",y+'-'+x+'-'+d]],\n                                            ],\n                                            \"fields\":[\"name\",]\n       \n                                        },\n                                        callback:function(d)\n                                        {\n                                            console.log(\"s\",s);\n                                             if(d.message[0])\n                                             {\n                                                $.each(d.message,function(i,item)\n                                                {\n                                                   // console.log(item.name);\n                                                    //a[i]=item.name;\n                                                    frappe.db.set_value(\"Task\",item.name,\"status\",s);\n                                                });\n                                             }\n                                        }\n                                    });\n                             }\n                        }\n  }\n  \n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-06-22 18:59:00.733408",
  "name": "Customer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "        var j;\n        var n=[] ;\n        var x;\n        var v,i;        \n        var a=[];\n\t    var b=[];\n\t    var c=[];\n\t    var d=[];\n\t    var e=[];\n\t    var f=[];\n\t    var g=[];\n\t    var s=[];\n\t    var h=[];\n\t    var r=[];\n        var email;\n        var o=[];\n        var p=[];\n        var q=[];\n        var emply=[];\n        var emply_email=[];\n        var userrole=[];\n        var service_star1t\n        var service_due1\n        var service_end1\n        var jobrepeat1\n        var after_save\n\nfrappe.ui.form.on('Customer',\n{\n    onload(frm)\n    { \n        frm.trigger(\"employee_name_filter\");\n        // console.log(frm.doc.company);\n         if(frm.doc.email_id !==undefined)\n         {\n            email= frm.doc.email_id;  \n         }\n         else\n         {\n             email=undefined;\n         }\n \n        if(frm.doc.company ===\"Confederate CA\")\n        {\n            frm.set_value(\"default_currency\",\"AED\");\n            frm.set_value(\"default_price_list\",\"Selling UAE\");\n        }\n        else\n        {\n            frm.set_value(\"default_currency\",\"INR\");\n            frm.set_value(\"default_price_list\",\"Selling INR\");\n        }\n        \n                    if(frm.doc.name==\"Default Customer\")\n                    {\n                        msgprint(\"You Can't Edit This Doc\");\n                        frm.disable_save();\n                    }\n                    else\n                    {\n                        frm.enable_save();\n                    }\n \n        a=[];\n        b=[];\n        e=[];\n        f=[];\n        s=[];\n        h=[];\n        r=[];      \n        //console.log(frm.doc.customer_name)\n        cur_frm.dashboard.hide();\n        setTimeout(() => {\n        $(\"[data-doctype='Maintenance Visit']\").hide();\n        $(\"[data-doctype='Quotation']\").hide();\n        $(\"[data-doctype='Installation Note']\").hide();\n        $(\"[data-doctype='Issue']\").hide();\n        $(\"[data-doctype='Opportunity']\").hide();\n        $(\"[data-doctype='Warranty Claim']\").hide();\n        $(\"[data-doctype='Subscription']\").hide();\n        $(\"[data-doctype='Project']\").hide();\n        $(\"[data-doctype='Sales Order']\").hide();\n        $(\"[data-doctype='Delivery Note']\").hide();\n        $(\"[data-doctype='Pricing Rule']\").hide();\n        $(\"[data-doctype='Bank Account']\").hide();\n        $(\".form-link-title\").hide();\n        }, 10);\n        \n\n            if(frm.doc.lead_name !== undefined)\n    \t    {\n    \t        frappe.call\n             \t({\n                    \"method\":\"frappe.client.get_list\",\n                    \"args\":\n                            {\n                                \"doctype\":\"Lead\",\n                                \"filters\":{\"name\":frm.doc.lead_name},\n                                \"fields\":[\"name\",\"email_id\"]\n                            },\n                            callback:function(d)\n                            {\n                                if(d.message[0])\n                                {\n                                  frm.set_value(\"email_id\",d.message[0].email_id);\n                                  email=d.message[0].email_id;\n                                }\n                                \n                            }\n                }); \n                        \n    \t    }\n        \n\n \t        frm.fields_dict.user.grid.get_field('users').get_query =\n\t\t\tfunction()\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t    \n\t\t\t\t\tfilters:{\n\t\t\t\t\t        'role_profile_name': ['in', ['Employee', 'Manager']]\n\t\t\t\t        \t}\n\t\t\t\t        \t\n\t\t\t\t    };\n\t\t\t}; \n\n    },\n    \n    company(frm)\n    {\n        if(frm.doc.company ===\"Confederate CA\")\n        {\n            frm.set_value(\"default_currency\",\"AED\");\n            frm.set_value(\"default_price_list\",\"Selling UAE\");\n        }\n        else\n        {\n            frm.set_value(\"default_currency\",\"INR\");\n            frm.set_value(\"default_price_list\",\"Selling INR\");\n        }  \n    },\n    \n\trefresh:function(frm)\n\t{\n\t     frm.set_query(\"territory\", function () \n\t     {\n            return {\n                filters:[\n                    [\"territory_name\",\"!=\",\"All Territories\"],\n                    [\"territory_name\",\"!=\",\"Rest Of The World\"],\n                ]\n            };\n\t     })\n\t    \n\t       // frm.fields_dict['customer_jobs'].grid.toggle_enable(false);\n\t       //frm.fields_dict['customer_jobs'].grid.wrapper.find('.grid-row-open-row').addClass('hidden');\n\t    \n\t        cur_frm.dashboard.hide()\n\t        frm.page.wrapper.find(\".comment-box\").css({'display':'none'}); \n            frm.page.sidebar.remove();\n\t        cur_frm.page.remove_inner_button(__('Menu'));\n\t    \n\t               if(frm.doc.name==\"Default Customer\")\n                    {\n                        // cur_frm.page.remove_inner_button(__('Delete'),  __('Create'));\n                        frm.disable_save();\n                    }\n                    else\n                    {\n                        frm.enable_save();\n                    }\n        \n    \t    cur_frm.page.remove_inner_button(__('Accounts Receivable'),  __('View'));\n    \t    cur_frm.page.remove_inner_button(__('Accounting Ledger'),  __('View'));\n    \t    cur_frm.page.remove_inner_button(__('Pricing Rule'),  __('Create'));\n    \t\tcur_frm.page.remove_inner_button(__('Get Customer Group Details'),  __('Actions'));\n    \t\t\n\t        frm.add_custom_button(__(\"Task\"), function()\n\t        {\n\t\t\t    frappe.set_route(\"List\", \"Task\",frm.doc.task);\n\t\t\t});\n\t\t\t\n\t\t\tif(frm.is_new())\n\t\t\t{\n \t            cur_frm.set_value(\"date\", frappe.datetime.get_today());\n\t\t\t}\n \t        \n \t        frm.trigger(\"set_table_readonly\");\n \t        \n \t        frm.page.add_inner_button(__(\"Update Service\"),\n            function()\n            {\n                var trigger_tbl=1\n                var service=[];\n                var repeated=\" \"\n                                    $.each(frm.doc.customer_jobs,function(i,v)\n                                    {\n                                        service.push(v.idx+\". \"+v.services);\n                                    });\n\n \t                 var d = new frappe.ui.Dialog\n                    ({\n                                                \ttitle: __(\"Select Service\"),\n                                                \tfields:\n                                                \t[   \n                                                        {\n                                                    \t\tfieldtype: \"HTML\",\n                                                    \t\tfieldname: \"description\",\n                                                    \t\toptions:\"*\",\n                                                    // \t\t'depends_on':'description.value !==\"*',\n                                                    // \t\thidden:1\n                                                    \t},\n\n                                                        {\n                                                    \t\tfieldtype: \"Select\",\n                                                    \t\tfieldname: \"services\",\n                                                    \t\tlabel: __(\"Service\"),\n                                                    \t\toptions:service,\n                                                    \t\treqd: 1,\n                                                    \t\t'onchange':() =>\n                                                             { \n                                                                 if(trigger_tbl==1)\n                                                                 {\n                                                                     trigger_tbl=2\n                                                                     var services = d.get_field(\"services\");\n                                                                     var name = d.get_field(\"name\");\n                                                                     var service_start_date = d.get_field(\"service_start_date\");\n                                                                     var service_due_date = d.get_field(\"service_due_date\");\n                                                                     var service_end = d.get_field(\"service_end\");\n                                                                     var reminder = d.get_field(\"reminder\");\n                                                                     var job_repeat = d.get_field(\"job_repeat\");\n                                                                     var client_reminder = d.get_field(\"client_reminder\");\n                                                                     var description1 = d.get_field(\"description\");\n                                                                     \n                                                                     var idx=services.value.split(\".\")[0];\n\n                                                                        $.each(frm.doc.customer_jobs,function(i,v)\n                                                                        {\n                                                                           \n                                                                            if(v.idx==idx)\n                                                                            {\n                                                                                service_start_date.value=v.start_date\n                                                                                service_due_date.value=v.due_date\n                                                                                service_end.value=v.validity\n                                                                                reminder.value=v.remind_before_days.toString()\n                                                                                name.value=v.name\n\n                                                                                job_repeat.value=v.repeat_on\n                                                                                 \n                                                                                if(v.client_reminder==0)\n                                                                                {\n                                                                                    client_reminder.value=0\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    client_reminder.value=1\n                                                                                }\n                                \n                                                                                    frappe.call\n                                                                                 \t({\n                                                                                        \"method\":\"frappe.client.get_list\",\n                                                                                        \"args\":\n                                                                                                {\n                                                                                                    \"doctype\":\"Task\",\n                                                                                                    \"filters\":{\"job_row_name\":v.name},\n                                                                                                    // \"fields\":[\"name\",\"email_id\"]\n                                                                                                },\n                                                                                                callback:function(d)\n                                                                                                {\n                                                                                                    if(d.message[0])\n                                                                                                    {\n                                                                                                        if(d.message.length==1)\n                                                                                                        {\n                                                                                                            //  description1.df.hidden=0\n                                                                                                             description1.df.options=\"*\"\n                                                                                                             description1.refresh()\n                                                                                                             repeated=\" \"\n                                                                                                        }\n                                                                                                        else\n                                                                                                        {\n                                                                                                            var z=\"Repeated jobs already created.So can't update job. Proceeding this will stop current job repeat and will add as new service in service list.\"\n                                                                                                            description1.df.options=z\n                                                                                                            description1.refresh()\n                                                                                                            repeated=\"true\"\n                                                                                                            // frappe.msgprint({\n                                                                                                            // title: __('Notification'),\n                                                                                                            // indicator: 'green',\n                                                                                                            // message: __(z)\n                                                                                                            // });\n                                                                                                            // description1.df.hidden=0\n                                                                                                        }\n                                                                                                    }\n                                                                                                    \n                                                                                                }\n                                                                                    })\n                                                                            }\n                                                                        });\n                                                                        \n                                                                     service_start_date.refresh()\n                                                                     service_due_date.refresh()\n                                                                     service_end.refresh()\n                                                                     reminder.refresh()\n                                                                     job_repeat.refresh()\n                                                                     client_reminder.refresh()\n                                                                     name.refresh()\n                                                                     description1.refresh()\n                                                                 }\n                                                                 else\n                                                                 {\n                                                                    trigger_tbl=1 \n                                                                 }\n                                                             },\n                                                    \t}, \n\n                                                    \t{\n                                                    \t\tfieldtype: \"Data\",\n                                                    \t\tfieldname: \"name\",\n                                                    \t\tlabel: __(\"Row Name\"),\n                                                    \t\treqd: 1,\n                                                    \t\thidden:1,\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Date\",\n                                                    \t\tfieldname: \"service_start_date\",\n                                                    \t\tlabel: __(\"Service Start Date\"),\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t\t'onchange':() =>\n                                                             { \n                                                                 if(trigger_tbl==1)\n                                                                 {\n                                                                      service_star1t= d.get_field(\"service_start_date\");\n                                                                      service_due1= d.get_field(\"service_due_date\");\n                                                                      service_end1= d.get_field(\"service_end\");\n                                                                      jobrepeat1= d.get_field(\"job_repeat\");\n                                                                      \n                                                                      frm.trigger(\"validation_message\")\n                                                                      \n                                                                     \n\n                                                                     trigger_tbl=2\n                                                                 }\n                                                                 else\n                                                                 {\n                                                                    trigger_tbl=1 \n                                                                 }\n                                                                 \n                                                             },\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Date\",\n                                                    \t\tfieldname: \"service_due_date\",\n                                                    \t\tlabel: __(\"Service Due Date\"),\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t\t'onchange':() =>\n                                                             { \n                                                                 if(trigger_tbl==1)\n                                                                 {\n                                                                     service_star1t= d.get_field(\"service_start_date\");\n                                                                      service_due1= d.get_field(\"service_due_date\");\n                                                                      service_end1= d.get_field(\"service_end\");\n                                                                      jobrepeat1= d.get_field(\"job_repeat\");\n                                                                      \n                                                                      frm.trigger(\"validation_message\")\n\n                                                                     trigger_tbl=2\n                                                                 }\n                                                                 else\n                                                                 {\n                                                                    trigger_tbl=1 \n                                                                 }\n                                                                 \n                                                             },\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Date\",\n                                                    \t\tfieldname: \"service_end\",\n                                                    \t\tlabel: __(\"Service End\"),\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t\t'onchange':() =>\n                                                             { \n                                                                 if(trigger_tbl==1)\n                                                                 {\n                                                                     service_star1t= d.get_field(\"service_start_date\");\n                                                                      service_due1= d.get_field(\"service_due_date\");\n                                                                      service_end1= d.get_field(\"service_end\");\n                                                                      jobrepeat1= d.get_field(\"job_repeat\");\n                                                                      \n                                                                      frm.trigger(\"validation_message\")\n\n                                                                     trigger_tbl=2\n                                                                 }\n                                                                 else\n                                                                 {\n                                                                    trigger_tbl=1 \n                                                                 }\n                                                                 \n                                                             },\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Data\",\n                                                    \t\tfieldname: \"reminder\",\n                                                    \t\tlabel: __(\"Reminder\"),\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Select\",\n                                                    \t\tfieldname: \"job_repeat\",\n                                                    \t\tlabel: __(\"Job Repeat\"),\n                                                    \t\toptions:[\"Only Once\",\"Weekly\",\"Biweekly\",\"Monthly\",\"Quarterly\",\"Yearly\"],\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t    'onchange':() =>\n                                                             { \n                                                                 if(trigger_tbl==1)\n                                                                 {\n                                                                     service_star1t= d.get_field(\"service_start_date\");\n                                                                      service_due1= d.get_field(\"service_due_date\");\n                                                                      service_end1= d.get_field(\"service_end\");\n                                                                      jobrepeat1= d.get_field(\"job_repeat\");\n                                                                      \n                                                                      frm.trigger(\"validation_message\")\n\n                                                                     trigger_tbl=2\n                                                                 }\n                                                                 else\n                                                                 {\n                                                                    trigger_tbl=1 \n                                                                 }\n                                                                 \n                                                             },\n                                                    \t},\n                                                    \t\n                                                    \t{\n                                                    \t\tfieldtype: \"Check\",\n                                                    \t\tfieldname: \"client_reminder\",\n                                                    \t\tlabel: __(\"Client Reminder\"),\n                                                    \t\treqd: 1,\n                                                    \t\t'depends_on':'services',\n                                                    \t},\n                                                    \t    \n                                                    \t   {\"fieldtype\":\"Section Break\"},\n                                                    \t            {\"fieldtype\":\"Column Break\"},\n                                                    \t            {\"fieldtype\":\"Column Break\"},\n                                                    \t            {\"fieldtype\":\"Column Break\"},\n                                                    \t            {\"fieldtype\":\"Column Break\"},\n                                                        {\"fieldtype\": \"Button\", \"label\":\"Submit\", \"fieldname\":\"submit\",},\n                                                \t]\n                    });\n                                            \n                    d.fields_dict.submit.input.onclick = function()\n                    {\n                                                d.hide()\n                                                var name=d.fields_dict.name.value\n                                                var start=d.fields_dict.service_start_date.value\n                                                var stop=d.fields_dict.service_due_date.value\n                                                var service_end=d.fields_dict.service_end.value\n                                                var reminder=d.fields_dict.reminder.value\n                                                var job_repeat=d.fields_dict.job_repeat.value\n                                                var client_reminder=d.fields_dict.client_reminder.value\n                                                var services = d.get_field(\"services\").value.split(\".\")[1].trim();\n                        if(repeated==\" \")\n                        {\n                                                \n                                                \n                                        frappe.call\n                                     \t({\n                                            \"method\":\"frappe.client.get_list\",\n                                            \"args\":\n                                                    {\n                                                        \"doctype\":\"Task\",\n                                                        \"filters\":{\"job_row_name\":name},\n                                                        // \"fields\":[\"name\",\"email_id\"]\n                                                    },\n                                                    callback:function(d)\n                                                    {\n                                                        if(d.message[0])\n                                                        {\n                                                          frappe.db.set_value(\"Task\",d.message[0].name,\n                                                          {\n                                                              \"created_date\":start,\n                                                              \"service_due\":stop,\n                                                              \"validtill\":service_end,\n                                                              \"reminder_before\":reminder,\n                                                              \"repeat_range\":job_repeat,\n                                                              \"client_reminder\":client_reminder,\n                                                          });\n                                                        }\n                                                        \n                                                    }\n                                        })\n                                        \n                                        $.each(frm.doc.customer_jobs,function(i,v)\n                                        {\n                                            if(v.name==name)\n                                            {\n                                                v.start_date = start\n                                                v.due_date=stop\n                                                v.validity = service_end\n                                                v.remind_before_days=flt(reminder)\n                                                v.repeat_on=job_repeat\n                                                v.client_reminder=flt(client_reminder)\n                                            }\n                                        });\n                                        frm.refresh_field(\"customer_jobs\")\n                        }\n                        else\n                        {\n                                        frappe.call\n                                     \t({\n                                            \"method\":\"frappe.client.get_list\",\n                                            \"args\":\n                                                    {\n                                                        \"doctype\":\"Task\",\n                                                        \"filters\":{\"job_row_name\":name},\n                                                        // \"fields\":[\"name\",\"email_id\"]\n                                                    },\n                                                    callback:function(d)\n                                                    {\n                                                        if(d.message[0])\n                                                        {\n                                                            $.each(d.message,function(i,v)\n                                                            {\n                                                                  frappe.db.set_value(\"Task\",v.name,\n                                                                  {\n                                                                      \"repeat_task\":1\n                                                                  });\n                                                            })\n                                                          \n                                                        }\n                                                        \n                                                    }\n                                        })\n                                        \n                            var childTable = cur_frm.add_child(\"customer_jobs\");\n                            childTable.services=services\n                            childTable.start_date=start\n                            childTable.due_date=stop\n                            childTable.validity=service_end\n                            childTable.remind_before_days=reminder\n                            childTable.repeat_on=job_repeat\n                            childTable.client_reminder=client_reminder\n                            cur_frm.refresh_fields(\"customer_jobs\"); \n\n                        }\n                        frm.save()\n                    }\n                                            \n                    d.show()\n            });\n     \n\t}, \n\t\n\tset_table_readonly:function(frm)\n\t{\n\t    var grid = frm.fields_dict['customer_jobs'].grid;\n\t    \n\t   // if(after_save==1)\n\t   // {\n\t   //     $.each(frm.doc.customer_jobs,function(i,v)\n    //         {\n    //                 grid.grid_rows[i].columns.services.df.read_only=1\n    //                 grid.grid_rows[i].columns.start_date.df.read_only=1\n    //                 grid.grid_rows[i].columns.due_date.df.read_only=1\n    //                 grid.grid_rows[i].columns.validity.df.read_only=1\n    //                 grid.grid_rows[i].columns.remind_before_days.df.read_only=1\n    //                 grid.grid_rows[i].columns.repeat_on.df.read_only=1\n    //                 grid.grid_rows[i].columns.client_reminder.df.read_only=1\n    //         });\n    //         frm.refresh_fields();\n\t   // }\n\t   // else\n\t   // {\n\t   //     $.each(frm.doc.customer_jobs,function(i,v)\n    //         {\n    //             if(v.name !=\"new-customer-service-1\")\n    //             {\n    //                 grid.grid_rows[i].columns.services.df.read_only=1\n    //                 grid.grid_rows[i].columns.start_date.df.read_only=1\n    //                 grid.grid_rows[i].columns.due_date.df.read_only=1\n    //                 grid.grid_rows[i].columns.validity.df.read_only=1\n    //                 grid.grid_rows[i].columns.remind_before_days.df.read_only=1\n    //                 grid.grid_rows[i].columns.repeat_on.df.read_only=1\n    //                 grid.grid_rows[i].columns.client_reminder.df.read_only=1\n    //                  frm.refresh_fields();\n    //             }\n    //         });\n\t   // }\n\t    \n\t    $.each(frm.doc.customer_jobs,function(i,v)\n        {\n            // console.log(\"xx---\",v.name)\n            if(v.name !=\"new-customer-service-1\")\n            {\n                grid.grid_rows[i].columns.services.df.read_only=1\n                grid.grid_rows[i].columns.start_date.df.read_only=1\n                grid.grid_rows[i].columns.due_date.df.read_only=1\n                grid.grid_rows[i].columns.validity.df.read_only=1\n                grid.grid_rows[i].columns.remind_before_days.df.read_only=1\n                grid.grid_rows[i].columns.repeat_on.df.read_only=1\n                grid.grid_rows[i].columns.client_reminder.df.read_only=1\n                 frm.refresh_fields();\n            }\n        });\n       \n\n\t    // var df = frappe.meta.get_docfield(\"Customer Service\",\"services\", cur_frm.doc.name);\n        //     df.read_only = 1;\n        //     frm.refresh_fields();\n\t},\n\t\n\tvalidation_message:function(frm)\n\t{\n\t      if(service_star1t !=undefined && service_due1 !=undefined && service_end1 !=undefined && jobrepeat1 !=undefined)\n          {\n              if(service_star1t.value.length>0 && service_due1.value.length>0 && service_end1.value.length>0 && jobrepeat1.value.length>0&& jobrepeat1.value !=\"Only Once\")\n              {\n                    var repeat_date = new Date(service_star1t.value);\n                    \n                    if(jobrepeat1.value==\"Monthly\")\n                    {\n                        repeat_date.setMonth(repeat_date.getMonth()+2);\n                    }\n                    else if(jobrepeat1.value==\"Quarterly\")\n                    {\n                        repeat_date.setMonth(repeat_date.getMonth()+4);\n                    }\n                    else if(jobrepeat1.value==\"Yearly\")\n                    {\n                        repeat_date.setMonth(repeat_date.getMonth()+13);\n                    }\n                    else if(jobrepeat1.value==\"Weekly\")\n                    {\n                        repeat_date.setDate(repeat_date.getDate() + 7);\n                    }\n                    else if(jobrepeat1.value==\"Biweekly\")\n                    {\n                        repeat_date.setDate(repeat_date.getDate() + 14);\n                    }\n                    \n                    var x=repeat_date.toString()\n                    var day1=x.split(\" \")[2]\n                    var month1=repeat_date.getMonth()+1\n                    var year1=repeat_date.getFullYear()\n                \n                    if(month1!=12)\n                    {\n                        month1=\"0\"+month1\n                    }\n            \n                    var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                    var date1=new Date(service_end1.value)\n                    var date2=new Date(new_repeat_date)\n                    var currentDate = new Date();\n                    var year = currentDate.getFullYear();\n                    var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n                    var day = currentDate.getDate().toString().padStart(2, '0');\n                    var today = `${year}-${month}-${day}`;\n                    var today1=new Date(today)\n                    \n                    if(date2>date1)\n                    {\n                        msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end1.value+\". So jobs will not repeat. Please correct the details\")\n                    }\n                    else if(date2<today1)\n                    {\n                        msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n                    }\n              }\n              else if(service_star1t.value.length>0 && service_due1.value.length>0)\n              {\n                  var date1 = new Date(service_star1t.value);\n                  var date2 = new Date(service_due1.value);\n                  \n                  if(date1>date2)\n                  {\n                      msgprint(\"Service due date can't be before service start date\")\n                  }\n              }\n          }\n          else if(service_star1t.value !=undefined && service_due1.value !=undefined)\n          {\n              if(service_star1t.value.length>0 && service_due1.value.length>0)\n              {\n                  var date1 = new Date(service_star1t.value);\n                  var date2 = new Date(service_due1.value);\n                  \n                  if(date1>date2)\n                  {\n                      msgprint(\"Service due date can't be before service start date\")\n                  }\n              }\n               \n          }\n    \n\t},\n\t\n\temployee_name_filter:function(frm)\n    {\n                        frappe.call\n                        ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":{\"status\":\"Active\"},\n                                    'limit_start':0,\n                                    'limit_page_length':1000,\n                                    \"fields\":[\"name\",\"employee_name\",\"user_id\"]\n                                },\n                            callback:function(d)\n                            {\n                                if(d.message[0])\n                                {\n                                    $.each(d.message,function(i,v)\n                                    {\n                                         emply.push(v.employee_name) ; \n                                         emply_email.push(v.user_id)\n                                    });\n                                    frm.fields_dict.user.grid.update_docfield_property(\"employee\", 'options',emply);\n\t                             }\n\t                             \n\t                         }\n\t                    }); \n\t                    \n\t                    \n    },\n    \n//     before_save:function(frm)\n// \t{\n// \t    var validation=\" \"\n\t    \n// \t    if(frm.doc.customer_payment_reminder ==\"----SELECT----\")\n// \t    {\n//     \t    msgprint(\"Please Select Customer Payment Reminder\");\n// \t        frappe.validated = false;\n// \t    }\n// \t    else\n// \t    {\n// \t        $.each(frm.doc.customer_jobs,function(i,v)\n// \t        {   \n// \t            if(v.repeat_on)\n// \t            {\n// \t                      var service_start=v.start_date\n//                           var service_due=v.due_date\n//                           var service_end=v.validity\n//                           var jobrepeat=v.repeat_on\n\t                \n// \t                if(service_start && service_due && service_end && jobrepeat)\n// \t                {\n// \t                  if(service_start.length>0 && service_due.length>0 && service_end.length>0 && jobrepeat.length>0&& jobrepeat !=\"Only Once\")\n//                       {\n//                             var repeat_date = new Date(service_start);\n                            \n//                             if(jobrepeat==\"Monthly\")\n//                             {\n//                                 repeat_date.setMonth(repeat_date.getMonth()+2);\n//                             }\n//                             else if(jobrepeat==\"Quarterly\")\n//                             {\n//                                 repeat_date.setMonth(repeat_date.getMonth()+4);\n//                             }\n//                             else if(jobrepeat==\"Yearly\")\n//                             {\n//                                 repeat_date.setMonth(repeat_date.getMonth()+13);\n//                             }\n//                             else if(jobrepeat==\"Weekly\")\n//                             {\n//                                 repeat_date.setDate(repeat_date.getDate() + 7);\n//                             }\n//                             else if(jobrepeat==\"Biweekly\")\n//                             {\n//                                 repeat_date.setDate(repeat_date.getDate() + 14);\n//                             }\n                            \n                            \n                            \n//                             var day1=service_start.split(\"-\")[2]\n//                             var month1=repeat_date.getMonth()+1\n//                             var year1=repeat_date.getFullYear()\n                        \n//                             if(month1!=12)\n//                             {\n//                                 month1=\"0\"+month1\n//                             }\n                    \n//                             var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                            \n                            \n//                             var date1=new Date(service_end)\n//                             var date2=new Date(new_repeat_date)\n                            \n//                             var currentDate = new Date();\n//                             var year = currentDate.getFullYear();\n//                             var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n//                             var day = currentDate.getDate().toString().padStart(2, '0');\n//                             var today = `${year}-${month}-${day}`;\n//                             var today1=new Date(today)\n                            \n//                             if(date2>date1)\n//                             {\n//                                 validation=\"false\"\n//                                 // msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end+\". So jobs will not repeat. Please correct the details\")\n//                             }\n//                             else if(date2<today1)\n//                             {\n//                                 validation=\"false\"\n//                                 // msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n//                             }\n//                             else\n//                             {\n//                                 validation=\"true\"\n//                             }\n//                       }\n// \t                }\n// \t            }\n// \t            else\n// \t            {\n// \t                  var date1 = new Date(v.start_date);\n//                       var date2 = new Date(v.due_date);\n                      \n//                       if(date1>date2)\n//                       {\n//                           validation=\"false\"\n//                       }\n// \t            }\n// \t        })\n\t        \n\t        \n// \t        if(validation==\"false\")\n// \t        {\n// \t             frappe.validated = false;\n// \t             msgprint(\"Please correct the data entered in services section\");\n// \t        }\n// \t        else\n// \t        {\n// \t            frappe.validated = true;\n// \t        }\n// \t    }\n\t    \n// \t},\n\n\tafter_save:function(frm)\n\t{\n\t    after_save=1\n\t    \n\t        if(email !==undefined)\n    \t    {\n    \t        //console.log(\"step1\")\n    \t        if(email!==frm.doc.email_id)\n    \t        {\n    \t           // console.log(\"step2\")\n    \t            frappe.db.insert\n                    ({\n                        doctype:'User',\n                        first_name:frm.doc.customer_name,\n                        email:frm.doc.email_id,\n                        company:frm.doc.company,\n                        send_welcome_email:0,\n                    }); \n                    email=frm.doc.email_id;\n                  // frappe.db.delete_doc(\"User\",email);\n    \t        }\n    \t    }\n    \t    else\n    \t    {\n    \t        //console.log(\"step3\")\n    \t        if(frm.doc.lead_name==undefined)\n    \t        {\n    \t           // console.log(\"step4\")\n    \t                    frappe.db.insert\n                            ({\n                                doctype:'User',\n                                first_name:frm.doc.customer_name,\n                                email:frm.doc.email_id,\n                                company:frm.doc.company,\n                                send_welcome_email:0,\n                            })\n                     email=frm.doc.email_id;\n    \t        }\n    \t      \n    \t    } \n\t    \n\t     $.each(frm.doc.customer_jobs,function(i, v)\n          {\n                             a[i]= v.services;\n                             b[i]=v.due_date;\n                             e[i]=v.validity;\n                             f[i]=v.repeat_on;\n                             s[i]=v.start_date;\n                             h[i]=v.remind_before_days;\n                             r[i]=v.name;\n\n                        frappe.call\n         \t            ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                            {\n                                \"doctype\":\"Task\",\n                                \"filters\":{\"subject\":a[i],\"customer\":frm.doc.name,\"job_row_name\":r[i]},\n                            },\n                            callback:function(d)\n                            {\n                                if(d)\n                                {\n                                    if(d.message.length===0)\n                                    {\n                                        if(f[i]==\"Only Once\")\n                                        {\n                                                                            frappe.db.insert\n                                                                            ({\n                                                                                doctype:'Task',\n                                                                                subject:a[i],\n                                                                                status:\"UnAssigned\",\n                                                                                customer:frm.doc.name,\n                                                                                created_date:s[i],\n                                                                                validtill:e[i],\n                                                                                repeat_range:f[i],\n                                                                                //day:g[i],\n                                                                                repeat:0,\n                                                                                client_reminder:1,\n                                                                                service_due:b[i],\n                                                                                description:a[i],\n                                                                                compani:frm.doc.company,\n                                                                                reminder_before:h[i],\n                                                                                job_row_name:r[i],\n                                                                            })\n                                        }\n                                        else\n                                        {\n                                                                            frappe.db.insert\n                                                                            ({\n                                                                                doctype:'Task',\n                                                                                subject:a[i],\n                                                                                status:\"UnAssigned\",\n                                                                                customer:frm.doc.name,\n                                                                                created_date:s[i],\n                                                                                validtill:e[i],\n                                                                                repeat_range:f[i],\n                                                                                //day:g[i],\n                                                                                repeat:1,\n                                                                                client_reminder:1,\n                                                                                service_due:b[i],\n                                                                                description:a[i],\n                                                                                compani:frm.doc.company,\n                                                                                reminder_before:h[i],\n                                                                                job_row_name:r[i],\n                                                                            })\n                                        }\n                                     }\n                                }\n                            }\n                      });\n          });\n\n         $.each(frm.doc.user,function(i,v)\n         {\n            o[i]=v.employee_email;\n         });\n         \n         frappe.call\n         ({\n                        \"method\":\"frappe.client.get_list\",\n                        \"args\":\n                        {\n                            \"doctype\":\"User Permission\",\n                            \"filters\":{\"for_value\":frm.doc.customer_name},\n                            \"fields\":[\"user\",\"name\"]\n                        },\n                    \n                        callback:function(d)\n                        {\n                            if(d.message)\n                            {\n                                $.each(d.message,function(i,item)\n                                {\n                                      p[i]=item.user;\n                                      q[i]=item.name;\n \n                                });\n\t                        }\n\n\t                        if(o.length>0 && p.length>0)\n                            {\n                                 for(var i=0;i<p.length;i++)\n                                 {\n                                  if(o.includes(p[i]) !==true)\n                                    {\n                                      frappe.db.delete_doc(\"User Permission\",q[i]);\n                                    }\n                                 }\n                                 \n                                 for(i=0;i<o.length;i++)\n                                 {\n                                            if(p.includes(o[i]) !==true)\n                                            {\n                                                     if(o[i]!=null)\n                                                     {\n                                                         var user1=o[i];\n\n                                                            frappe.call\n                                                         \t({\n                                                                \"method\":\"frappe.client.get\",\n                                                                \"args\":\n                                                                        {\n                                                                            \"doctype\":\"User\",\n                                                                            \"filters\":{\"name\":user1},\n                                                                            \n                                                                         },\n                                                         \t})\n                                                            .then(function(doc)\n                                                         \t{\n                                                         \t                    $.each(doc.message.roles,function(i,v)\n                                                                                {\n                                                                                        userrole[i]=v.role\n                                                                                })\n                                                                                \n                                                                                if(userrole.includes(\"Ceo Uae\")==true || userrole.includes(\"Ceo In\")==true || userrole.includes(\"Customer\")==true)\n                                                                                {\n                                                                                    //console.log(\"dont create user permission\")\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    frappe.db.insert\n                                    \t                                            ({\n                                                                                        \"doctype\":'User Permission',   \n                                                                                        \"user\":doc.message.name,\n                                                                                        \"allow\":\"Customer\",\n                                                                                        'for_value':frm.doc.customer_name,\n                                                                                        'apply_to_all_doctypes':1,\n                                                                                    })\n                                                                                    \n                                                                                    \n                                                                                   \n                                                                // .then(function(doc)\n                                                                //                     { \n                                                                //                         msgprint(`Created User Permission`);\n                                                                //                     });                 \n                                                                                }\n                                                         \t})\n                                                     }\n                                                            \n                                                \n                                               \n                                            }\n                                    \n                                 }\n                            }\n                            \n                            if(o.length===0 && p.length>0)\n                            {\n                                for(var j=0;j<p.length;j++)\n                                 {\n                                  frappe.db.delete_doc(\"User Permission\",q[j]);\n                                 }   \n                            }\n                            \n                            if(o.length>0 && p.length===0)\n                            {\n                                for(var k=0;k<o.length;k++)\n                                {\n                                                  if(o[k] !=null)\n                                                     {\n                                                         var user1=o[k];\n                                                         \n                                                        //  setTimeout(()=>\n                                                        //  {\n                                                            frappe.call\n                                                         \t({\n                                                                \"method\":\"frappe.client.get\",\n                                                                \"args\":\n                                                                        {\n                                                                            \"doctype\":\"User\",\n                                                                            \"filters\":{\"name\":user1},\n                                                                        },\n                                                         \t})\n                                                         \t.then(function(doc)\n                                                         \t{\n                                                         \t                if(doc.message)\n                                                                            {\n                                                                                $.each(doc.message.roles,function(i,v)\n                                                                                {\n                                                                                        userrole[i]=v.role\n                                                                                })\n                                                                                \n                                                                                if(userrole.includes(\"Ceo Uae\")==true || userrole.includes(\"Ceo In\")==true|| userrole.includes(\"Customer\")==true)\n                                                                                {\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                        frappe.db.insert\n                                        \t                                            ({\n                                                                                            \"doctype\":'User Permission',    \n                                                                                            \"user\":doc.message.name,\n                                                                                            \"allow\":\"Customer\",\n                                                                                            \"for_value\":frm.doc.customer_name,\n                                                                                            \"apply_to_all_doctypes\":1,\n                                                                                        })\n                                                                                        \n                                                                                        .then(function(doc)\n                                                                                        { \n                                                                                            msgprint(`Created User Permission`);\n                                                                                        });    \n                                                                                }\n                                                                            }\n                                                         \t    \n                                                         \t})\n                                                     }\n                                }\n                            }\n                        \n                        \n                            o =[];\n                            p=[];\n                            q=[];\n                \n                        }\n    \n        });\n        \n        var grid = frm.fields_dict['customer_jobs'].grid;\n        $.each(frm.doc.customer_jobs,function(i,v)\n        {\n                grid.grid_rows[i].columns.services.df.read_only=1\n                grid.grid_rows[i].columns.start_date.df.read_only=1\n                grid.grid_rows[i].columns.due_date.df.read_only=1\n                grid.grid_rows[i].columns.validity.df.read_only=1\n                grid.grid_rows[i].columns.remind_before_days.df.read_only=1\n                grid.grid_rows[i].columns.repeat_on.df.read_only=1\n                grid.grid_rows[i].columns.client_reminder.df.read_only=1\n                 frm.refresh_fields();\n        });\n        \n        \n        \n        // frm.reload_doc();\n        \n\t},\n\n});\n\n\nfrappe.ui.form.on('Customer Service',\n{\n  start_date:function(frm,cdt,cdn)\n  {\n      var d=locals [cdt][cdn];\n      var service_start=d.start_date\n      var service_due=d.due_date\n      var service_end=d.validity\n      var jobrepeat=d.repeat_on\n      \n      if(service_start !=undefined && service_due !=undefined && service_end !=undefined && jobrepeat !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0 && service_end.length>0 && jobrepeat.length>0&& jobrepeat !=\"Only Once\")\n          {\n                var repeat_date = new Date(service_start);\n                \n                if(jobrepeat==\"Monthly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+2);\n                }\n                else if(jobrepeat==\"Quarterly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+4);\n                }\n                else if(jobrepeat==\"Yearly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+13);\n                }\n                else if(jobrepeat==\"Weekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 7);\n                }\n                else if(jobrepeat==\"Biweekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 14);\n                }\n                \n                var x=repeat_date.toString()\n                var day1=x.split(\" \")[2]\n                var month1=repeat_date.getMonth()+1\n                var year1=repeat_date.getFullYear()\n            \n                if(month1!=12)\n                {\n                    month1=\"0\"+month1\n                }\n        \n                var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                \n                \n                var date1=new Date(service_end)\n                var date2=new Date(new_repeat_date)\n                \n                var currentDate = new Date();\n                var year = currentDate.getFullYear();\n                var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n                var day = currentDate.getDate().toString().padStart(2, '0');\n                var today = `${year}-${month}-${day}`;\n                var today1=new Date(today)\n                \n                if(date2>date1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end+\". So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n                else if(date2<today1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n          }\n          else if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n      }\n      else if(service_start !=undefined && service_due !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n           \n      }\n  },\n  \n  due_date:function(frm,cdt,cdn)\n  {\n      var d=locals [cdt][cdn];\n      var service_start=d.start_date\n      var service_due=d.due_date\n      var service_end=d.validity\n      var jobrepeat=d.repeat_on\n       \n      if(service_start !=undefined && service_due !=undefined && service_end !=undefined && jobrepeat !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0 && service_end.length>0 && jobrepeat.length>0&& jobrepeat !=\"Only Once\")\n          {\n                var repeat_date = new Date(service_start);\n                \n                if(jobrepeat==\"Monthly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+2);\n                }\n                else if(jobrepeat==\"Quarterly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+4);\n                }\n                else if(jobrepeat==\"Yearly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+13);\n                }\n                else if(jobrepeat==\"Weekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 7);\n                }\n                else if(jobrepeat==\"Biweekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 14);\n                }\n                \n                var x=repeat_date.toString()\n                var day1=x.split(\" \")[2]\n                var month1=repeat_date.getMonth()+1\n                var year1=repeat_date.getFullYear()\n            \n                if(month1!=12)\n                {\n                    month1=\"0\"+month1\n                }\n        \n                var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                \n                \n                var date1=new Date(service_end)\n                var date2=new Date(new_repeat_date)\n                \n                var currentDate = new Date();\n                var year = currentDate.getFullYear();\n                var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n                var day = currentDate.getDate().toString().padStart(2, '0');\n                var today = `${year}-${month}-${day}`;\n                var today1=new Date(today)\n                \n                if(date2>date1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end+\". So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n                else if(date2<today1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n          }\n          else if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n      }\n      else if(service_start !=undefined && service_due !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n           \n      }\n  \n    },\n  \n  validity:function(frm,cdt,cdn)\n  {\n      var d=locals [cdt][cdn];\n      var service_start=d.start_date\n      var service_due=d.due_date\n      var service_end=d.validity\n      var jobrepeat=d.repeat_on\n       \n      if(service_start !=undefined && service_due !=undefined && service_end !=undefined && jobrepeat !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0 && service_end.length>0 && jobrepeat.length>0&& jobrepeat !=\"Only Once\")\n          {\n                var repeat_date = new Date(service_start);\n                \n                if(jobrepeat==\"Monthly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+2);\n                }\n                else if(jobrepeat==\"Quarterly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+4);\n                }\n                else if(jobrepeat==\"Yearly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+13);\n                }\n                else if(jobrepeat==\"Weekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 7);\n                }\n                else if(jobrepeat==\"Biweekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 14);\n                }\n                \n                var x=repeat_date.toString()\n                var day1=x.split(\" \")[2]\n                var month1=repeat_date.getMonth()+1\n                var year1=repeat_date.getFullYear()\n            \n                if(month1!=12)\n                {\n                    month1=\"0\"+month1\n                }\n        \n                var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                \n                \n                var date1=new Date(service_end)\n                var date2=new Date(new_repeat_date)\n                \n                var currentDate = new Date();\n                var year = currentDate.getFullYear();\n                var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n                var day = currentDate.getDate().toString().padStart(2, '0');\n                var today = `${year}-${month}-${day}`;\n                var today1=new Date(today)\n                \n                if(date2>date1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end+\". So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n                else if(date2<today1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n          }\n          else if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n      }\n      else if(service_start !=undefined && service_due !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n           \n      }\n    },\n    \n  repeat_on:function(frm,cdt,cdn)\n  {\n      var d=locals [cdt][cdn];\n      var service_start=d.start_date\n      var service_due=d.due_date\n      var service_end=d.validity\n      var jobrepeat=d.repeat_on\n       \n      if(service_start !=undefined && service_due !=undefined && service_end !=undefined && jobrepeat !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0 && service_end.length>0 && jobrepeat.length>0&& jobrepeat !=\"Only Once\")\n          {\n                var repeat_date = new Date(service_start);\n                 var month1\n                if(jobrepeat==\"Monthly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+2);\n                    month1=repeat_date.getMonth()\n                }\n                else if(jobrepeat==\"Quarterly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+4);\n                    month1=repeat_date.getMonth()\n                }\n                else if(jobrepeat==\"Yearly\")\n                {\n                    repeat_date.setMonth(repeat_date.getMonth()+13);\n                    month1=repeat_date.getMonth()\n                }\n                else if(jobrepeat==\"Weekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 7);\n                    month1=repeat_date.getMonth()+1\n                }\n                else if(jobrepeat==\"Biweekly\")\n                {\n                    repeat_date.setDate(repeat_date.getDate() + 14);\n                    month1=repeat_date.getMonth()+1\n                }\n\n                var x=repeat_date.toString()\n                var day1=x.split(\" \")[2]\n               \n                var year1=repeat_date.getFullYear()\n            \n                if(month1!=12)\n                {\n                    month1=\"0\"+month1\n                }\n        \n                var new_repeat_date=year1+\"-\"+month1+\"-\"+day1\n                var date1=new Date(service_end)\n                var date2=new Date(new_repeat_date)\n                \n                var currentDate = new Date();\n                var year = currentDate.getFullYear();\n                var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n                var day = currentDate.getDate().toString().padStart(2, '0');\n                var today = `${year}-${month}-${day}`;\n                var today1=new Date(today)\n                \n                if(date2>date1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is greater than service end date \"+service_end+\". So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n                else if(date2<today1)\n                {\n                    msgprint(\"Depends upon the inputs you given next job repeat date is \"+new_repeat_date+\" . This is past date . So jobs will not repeat. Please correct the details\")\n                    d.repeat_on=undefined\n                    \n                }\n          }\n          else if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n      }\n      else if(service_start !=undefined && service_due !=undefined)\n      {\n          if(service_start.length>0 && service_due.length>0)\n          {\n              var d=locals [cdt][cdn];\n              var date1 = new Date(d.start_date);\n              var date2 = new Date(d.due_date);\n              \n              if(date1>date2)\n              {\n                  msgprint(\"Service due date can't be before service start date\")\n                  d.due_date=undefined\n              }\n          }\n           \n      }\n  \n    },\n    \n});\n\n\nvar userrole=[];\nfrappe.ui.form.on('Project Child',\n{\n    \n//   users:function(frm,cdt,cdn)\n//   {\n//       var d=locals [cdt][cdn];\n//       var idx1=d.idx-1;\n      \n//      if(d.users.length>0)\n//      {\n//          var user1=d.users;\n//          console.log(\"user1\",user1)\n//             frappe.call\n//          \t({\n//                 \"method\":\"frappe.client.get\",\n//                 \"args\":\n//                         {\n//                             \"doctype\":\"User\",\n//                             \"filters\":{\"name\":user1},\n//                         },\n//                         callback:function(d)\n//                         {\n//                             console.log(\"dddddddd\",d)\n//                             if(d.message)\n//                             {\n//                                 $.each(d.message.roles,function(i,v)\n//                                 {\n//                                         userrole[i]=v.role\n//                                 })\n//                               if(userrole.includes(\"Ceo Uae\")==true || userrole.includes(\"Ceo In\")==true || userrole.includes(\"Customer\")==true)\n//                                 {\n//                                     userrole=[];\n//                                     cur_frm.get_field(\"user\").grid.grid_rows[idx1].remove();\n//                                     frm.refresh_field('user');\n//                                     msgprint(\"This User Already Has Full Permission To Customer Master, Please Change Role Profile If Required \");\n//                                 }\n//                             }\n                            \n//                         }\n//             }); \n//       }\n//   },\n\n  employee:function(frm,cdt,cdn)\n  {\n      var d=locals [cdt][cdn];\n      if(d.employee !=undefined)\n      {\n          var indx=emply.indexOf(d.employee)\n          frappe.model.set_value(cdt,cdn,\"employee_email\",emply_email[indx])\n      }\n      else\n      {\n         frappe.model.set_value(cdt,cdn,\"employee_email\",undefined)   \n      }\n  }\n  \n    \n})\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "_liked_by": "[]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-10-31 10:23:09.588479",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "\nvar a=[];\nvar b=[];\nvar s=[];\nvar duetime=[];\nvar actualtime=[];\nvar i;\n\nvar x;\nvar y;\nvar d;\nfrappe.ui.form.on('Sales Invoice',\n{\n    onload:function(frm)\n    {\n        \n       \n            \n         \n         if(frm.doc.year==\"-- Select --\")\n         {\n             frm.set_value(\"year\",new Date().getFullYear())\n         }\n         \n         \n         setTimeout(() =>\n        {\n            frm.set_df_property(\"customer_name_in_arabic\",\"hidden\",1);\n            frm.set_df_property(\"naming_series\",\"hidden\",1);\n        },0)\n         \n         \n        // if(frm.doc.status==\"Draft\"||frm.doc.customer==undefined)\n        // {\n        //     frm.set_value(\"set_posting_time\",1);\n        // }\n        // else\n        // {\n        //      frm.set_value(\"set_posting_time\",0);\n        // }\n        // console.log(frm.doc.items[0].item_code)\n        // console.log(frm.doc.company)\n        \n        if (frm.is_new()) {\n        \n        \n        if(frm.doc.company===\"Confederate CA\")\n        {\n            \n            frm.set_value(\"naming_series\",\"TAX-DXB-.#####.\");\n            frm.set_value(\"tc_name\",\"UAE\")\n            frm.set_value(\"sign\",\"Sign\")\n            // frm.set_value(\"taxes_and_charges\",\"UAE VAT 5% - CF\")\n        }\n        else\n        {\n          frm.set_value(\"naming_series\",\"TAX-EKM-.#####.\") ;\n        }\n        \n        }\n        \n         \n        //  if(frm.doc.status ===\"Not Saved\")\n        //  {\n            if(frm.doc.items[0].item_code !==undefined && frm.doc.status ===\"Not Saved\")\n            {\n                frm.trigger('monthandyear');\n                frm.trigger('checkservicestatus');\n            }\n            // else\n            // {\n            //     //frm.enable_save(); \n            // }\n        // }\n      \n \n\n        \n     \n    },\n    \n    due_date:function(frm)\n    {\n        cur_frm.clear_table(\"payment_schedule\")\n        frm.refresh_field(\"payment_schedule\")\n        \n    },\n    \n    posting_date:function(frm)\n    {\n        cur_frm.clear_table(\"payment_schedule\")\n        frm.refresh_field(\"payment_schedule\")\n        \n    },\n    \n    \n    \n    company:function(frm)\n    {\n        if(frm.doc.company===\"Confederate CA\")\n        {\n            frm.set_value(\"naming_series\",\"TAX-DXB-.#####.\");\n            frm.set_value(\"set_warehouse\",\"Stores - CF\");\n            frm.set_value(\"taxes_and_charges\",\"UAE VAT 5% - CF\")\n            frm.set_value(\"banks\",\"FINPRIME TAX CONSULTANCY LLC-Mashreq Bank\")\n        }\n        else\n        {\n          frm.set_value(\"naming_series\",\"TAX-EKM-.#####.\");\n          frm.set_value(\"set_warehouse\",\"Stores - CI\");\n        }\n    },\n    \n    customer:function(frm)\n    {\n      \n        if(frm.doc.company===\"Confederate CA\")\n        {\n          frm.set_value(\"set_warehouse\",\"Stores - CF\");\n        }\n        else\n        {\n            frm.set_value(\"set_warehouse\",\"Stores - CI\");\n        }\n    },\n    \n    refresh:function(frm)\n    {\n      cur_frm.dashboard.hide();\n         setTimeout(() =>\n        {\n            \n            frm.set_df_property(\"customer_name_in_arabic\",\"hidden\",1);\n          // frm.set_df_property(\"naming_series\",\"hidden\",1);\n        },0);\n       \n        \n        setTimeout(() =>\n        {\n            \n            cur_frm.page.remove_inner_button(__('Quality Inspection(s)'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Subscription'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Return / Credit Note'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Delivery'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Payment Request'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Invoice Discounting'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Return / Credit Note'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Maintenance Schedule'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Sales Order'),  __('Get Items From'));\n            cur_frm.page.remove_inner_button(__('Delivery Note'),  __('Get Items From'));\n            cur_frm.page.remove_inner_button(__('Quotation'),  __('Get Items From'));\n            cur_frm.page.remove_inner_button(__('Fetch Timesheet'));\n        },0);\n\n        frm.get_field(\"items\").grid.cannot_add_rows = true;\n        $('*[data-fieldname=\"items\"]').find('.grid-remove-rows').hide();\n          \n        $(\"[data-doctype='Payment Request']\").hide();\n        $(\"[data-doctype='Journal Entry']\").hide();\n        $(\"[data-doctype='Invoice Discounting']\").hide();\n        $(\"[data-doctype='Dunning']\").hide();\n        $(\"[data-doctype='Auto Repeat']\").hide();\n        $(\"[data-doctype='Timesheet']\").hide();\n        $(\"[data-doctype='POS Invoice']\").hide();\n        $(\"[data-doctype='Project']\").hide();\n        $(\"[data-doctype='Delivery Note']\").hide();\n        $(\"[data-doctype='Pricing Rule']\").hide();\n        $(\"[data='Pre Sales']\").hide();\n        $(\"[data-doctype='Warranty Claim']\").hide();\n        $(\"[data-doctype='Subscription']\").hide();\n        $(\"[data-doctype='Project']\").hide();\n        $(\"[data-doctype='Returns']\").hide();\n    },\n \n\tmonth(frm)\n\t{\n\t    cur_frm.clear_table(\"items\");\n        cur_frm.refresh_fields(\"items\");\n        frm.trigger('monthandyear');\n        frm.trigger('servicefilter');\n        // frm.trigger(\"checkservicestatus\");\n        \n        a=[];\n        b=[];\n        s=[];\n\t    \n  },\n   \n  on_submit:function(frm)\n  {\n        frm.trigger('monthandyear');\n    \n        if(y !=undefined && x !=undefined)\n\t    {\n\t        //console.log(y+'-'+x+'-'+\"01\");\n\t        frappe.call\n\t         ({\n                \"method\": \"frappe.client.get_list\",\n                \"args\": \n                {\n                    \"doctype\": \"Task\",\n                    \"filters\": \n                        [\n                            ['customer', \"=\",frm.doc.customer], \n                            ['created_date', \"between\", [y+'-'+x+'-'+\"01\",y+'-'+x+'-'+d]],\n                        ],\n                    \"fields\":[\"name\",]\n       \n                },\n                callback:function(d)\n                {\n                    if(d.message[0])\n                    {\n                        $.each(d.message,function(i,item)\n                        {\n                            //a[i]=item.name;\n                            frappe.db.set_value(\"Task\",item.name,\"status\",\"Billed Not Paid\");\n                        });\n                       \n                    }\n                }\n            });\n\t    }\n  },\n   \n  monthandyear:function(frm)\n  {\n        y=frm.doc.year;\n\t  \n\t    if(frm.doc.month===\"January\")\n        {\n            x=\"01\";\n        }\n        else if(frm.doc.month===\"February\")\n        {\n          x=\"02\";  \n        }\n        else if(frm.doc.month===\"March\")\n        {\n            x=\"03\";\n        }\n        else if(frm.doc.month===\"April\")\n        {\n            x=\"04\";\n        }\n        else if(frm.doc.month===\"May\")\n        {\n            x=\"05\";\n        }\n        else if(frm.doc.month===\"June\")\n        {\n            x=\"06\";\n        }\n        else if(frm.doc.month===\"July\")\n        {\n            x=\"07\";\n        }\n\t    else if(frm.doc.month===\"August\")\n        {\n            x=\"08\";\n        }\n        else if(frm.doc.month===\"September\")\n        {\n            x=\"09\";\n        }\n        else if(frm.doc.month===\"October\")\n        {\n            x=\"10\";\n        }\n        else if(frm.doc.month===\"November\")\n        {\n            x=\"11\";\n        }\n        else if(frm.doc.month===\"December\")\n        {\n            x=\"12\";\n        }\n        \n        // console.log(\"y\",y);\n        //     console.log(\"x\",x);\n        \n        d = new Date(y,x, 0).getDate();\n        //console.log(\"d\",d);\n\n  },\n   \n  checkservicestatus:function(frm)\n  {\n        if(y !==undefined && x !==undefined)\n\t    {\n\t       // console.log(y+'-'+x+'-'+\"01\");\n\t        frappe.call\n\t         ({\n                \"method\": \"frappe.client.get_list\",\n                \"args\": \n                {\n                    \"doctype\": \"Task\",\n                    \"filters\": \n                        [\n                            ['customer', \"=\",frm.doc.customer], \n                            ['created_date', \"between\", [y+'-'+x+'-'+\"01\",y+'-'+x+'-'+d]],\n                            ['status',\"=\",[\"UnAssigned\",\"Open\",\"Working\",\"Pending Review\",\"Overdue\",\"Completed\"]]\n                        ],\n                    \"fields\":[\"name\",\"status\"]\n       \n                },\n                callback:function(d)\n                {\n                    if(d.message[0])\n                    {\n                        $.each(d.message,function(i,item)\n                        {\n                            a[i]=item.name;\n                            b[i]=item.status;\n                            s[i]=item.subject;\n                            duetime[i]=item.employee_due_time;\n                            actualtime[i]=item.employee_actual_time;\n                        });\n                    //     console.log(\"a1\",a);\n\t                   // console.log(\"b1\",b);\n\t                                    //||Open\",\"Working\",\"Pending Review\",\"Overdue\")\n\t                                    \n\t                     \n\t                     //EDITED  \n\t                     \n\t                   // if(b.includes(\"UnAssigned\")||b.includes(\"Open\")||b.includes(\"Working\")||b.includes(\"Pending Review\")||b.includes(\"Overdue\"))\n\t                   // {\n\t                   //      msgprint(\"Can't create sales Invoice before complete all task\");\n\t                   //      cur_frm.clear_table(\"items\");\n                    //          cur_frm.refresh_fields(\"items\");\n\t                   //      frm.disable_save();\n\t                   // }\n\t                   // else\n\t                   // {\n\t                       // cur_frm.clear_table(\"items\"); //NEW LINE ADDED \n\t                       //cur_frm.refresh_fields(\"items\");\n\t                       frm.enable_save(); \n\t                   // }\n\t                   \n\t                   //EDITED\n                    }\n                    else\n                    {\n                        msgprint(\"No unbilled services exist against this customer in \"+frm.doc.month);\n\t                    frm.disable_save();\n                    }\n                    \n                }\n            });\n\t    }\n  },\n   \n  servicefilter:function(frm)\n  {\n        if(y !==undefined && x !==undefined)\n\t    {\n\t       // console.log(y+'-'+x+'-'+\"01\");\n\t        frappe.call\n\t         ({\n                \"method\": \"frappe.client.get_list\",\n                \"args\": \n                {\n                    \"doctype\": \"Task\",\n                    \"filters\": \n                        [\n                            ['customer', \"=\",frm.doc.customer], \n                            ['created_date', \"between\", [y+'-'+x+'-'+\"01\",y+'-'+x+'-'+d]],\n                            ['status',\"=\",[\"UnAssigned\",\"Open\",\"Working\",\"Pending Review\",\"Overdue\",\"Completed\"]]\n                        ],\n                    \"fields\":[\"name\",\"status\",\"subject\",\"employee_due_time\",\"employee_actual_time\"]\n       \n                },\n                callback:function(d)\n                {\n                    if(d.message[0])\n                    {\n                        $.each(d.message,function(i,item)\n                        {\n                            a[i]=item.name;\n                            b[i]=item.status;\n                            s[i]=item.subject;\n                            duetime[i]=item.employee_due_time;\n                            actualtime[i]=item.employee_actual_time;\n                        });\n                    //     console.log(\"a1\",a);\n\t                   // console.log(\"b1\",b);\n\t                                    //||Open\",\"Working\",\"Pending Review\",\"Overdue\")\n\t                                    \n\t                   //EDITED\n\t                   // if(b.includes(\"UnAssigned\")||b.includes(\"Open\")||b.includes(\"Working\")||b.includes(\"Pending Review\")||b.includes(\"Overdue\"))\n\t                   // {\n\t                   //      msgprint(\"Can't create sales Invoice before complete all task\");\n\t                   //      frm.disable_save();\n\t                   // }\n\t                   // else\n\t                   // {\n    \t                       frm.enable_save(); \n    \t                      \n    \t                       for(var i=0;i<s.length;i++)\n    \t                       {\n    \t                            var child = cur_frm.add_child(\"items\");\n    \t                            frappe.model.set_value(child.doctype, child.name, \"item_code\",s[i]);\n    \t                            frappe.model.set_value(child.doctype, child.name, \"qty\",duetime[i]);\n    \t                            frappe.model.set_value(child.doctype, child.name, \"actual_hour_taken\",actualtime[i]);\n    \t                            \n    \t                       }\n    \t                       cur_frm.refresh_field(\"items\");\n\n\t                   // }\n\t                    \n\t                    //EDITED\n                    }\n                    else\n                    {\n                        msgprint(\"No unbilled services exist against this customer in \"+frm.doc.month);\n\t                    frm.disable_save();\n                    }\n                    \n                }\n            });\n\t    }\n  },\n   \n  after_save:function(frm)\n  {\n        frm.reload_doc();\n  },\n  \n  validate:function(frm)\n  {\n    // function update_batch_price(frm){\n    $.each(frm.doc.items || [], function(i, v) {\n        var batch_no = v.amount;\n        //console.log(batch_no,\"pppppppppp\")\n        //console.log((batch_no*5)/100,\"jjjjjj\")\n        \n        // var item_code = v.item_code;\n        // var price_list = frm.doc.selling_price_list\n        // frappe.call({\n        //     method: 'frappe.client.get',\n        //     args: {\n        //       'doctype': 'Item Price',\n        //       'filters': {'batch_no': batch_no, 'item_code': item_code, 'price_list':price_list}\n        //     },\n        //     callback: function(r){\n                 frappe.model.set_value(v.doctype, v.name,\"tax_per\", (batch_no*5)/100);\n        //     }\n        // });\n    });\n}\n\n}\n   \n   \n);\n\nfrappe.ui.form.on('Sales Invoice Item',\n{\n    amount:function(frm,cdt,cdn)\n    \n    {\n        \n    //   var d = locals[cdt][cdn];\n    //   console.log(d)\n      \n    //   console.log(d.discount_amount,\"kkkkkk\")\n    //   var y1=d.amount\n    //   console.log(y1,\"kkkk\")\n      //var y2=(y1*5)/100\n    //   console.log(y2)\n    \n    //frappe.model.set_value(cdt,cdn,\"tax_per\",y2)\n       \n      //console.log(y2,\"pppppp\")\n      \n    }\n})\n\n\n\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Project",
  "enabled": 0,
  "modified": "2022-03-26 12:26:06.133654",
  "name": "Project-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var a=[];\nvar b=[];\nvar c=[];\nvar d=[];\nvar e=[];\nvar f=[];\nfrappe.ui.form.on('Project', \n{\n\n        after_save(frm)\t\n        {\n            \n            frappe.call\n                ({\n                    \"method\":\"frappe.client.get\",\n                        \"args\":\n                        {\n                            \"doctype\":\"Customer\",\n                            \"filters\":{\"customer_name\":frm.doc.customer},\n                            //\"fields\":[\"name\"]\n                        },\n                    \n                        callback:function(d)\n                        {\n                            if(d)\n                            {\n                                console.log(d)\n                                console.log(d.message.customer_jobs)\n                      \n                          //var t=d.message.customer_jobs\n                          $.each(d.message.customer_jobs, function(i, v)\n                            {\n                             e[i] = v.services\n                             d[i] = v.due_date\n                             console.log(\"Services are -----------\",e[i])\n                             console.log(\"Due dates are \",d[i])\n                             \n                             frappe.call\n         \t      \n                            ({\n                                   \"method\":\"frappe.client.get_list\",\n                        \"args\":\n                        {\n                            \"doctype\":\"Task\",\n                            \"filters\":{\"project\":frm.doc.name},\n                            \"fields\":[\"subject\"]\n                        },\n                      callback:function(d)\n                        {\n                        if(d)\n                            {\n                                 console.log(d.message,\"-----------\")\n                                  $.each(d.message,function(i, v)\n                         {\n                            f[i]=v.subject\n                            console.log(\"Tasks are\",f[i])\n                        })\n                                  if(d.message.length===0)\n                                         {\n                                \n                            frappe.db.insert\n                                      ({\n                                         doctype:'Task',\n                                        subject:e[i],\n                                         status:\"Open\",\n                                         priority:frm.doc.priority,\n                                         project:frm.doc.name,\n                                        due_date:d[i],\n                                        description:e[i],\n                                        \n                                        })\n                                        .then(function(doc)\n                                        { \n                                       \n                                            msgprint(`Task ${doc.subject} is Created`);\n                \n                                         });\n                                        }\n                                 frappe.db.insert\n                                 ({\n                                     doctype:'Notification',\n                                     name:e[i],\n                                     subject:e[i],\n                                     channel:\"Email\",\n                                     document_type:\"Task\",\n                                     event:\"Days Before\",\n                                     days_in_advance:\"10\",\n                                     sender:\"Confederate.Uae\",\n                                     message:\"Task Added\",\n                                     date_changed:\"due_date\"\n                                 })\n                                 .then(function(doc)\n                                        { \n                                       \n                                            msgprint(`Notification ${doc.subject} is Created`);\n                \n                                         });\n                                          frappe.db.insert\n                                 ({\n                                     doctype:'Notification',\n                                     name:e[i],\n                                     subject:e[i],\n                                     channel:\"Email\",\n                                     document_type:\"Task\",\n                                     event:\"Days Before\",\n                                     days_in_advance:\"0\",\n                                     sender:\"Confederate.Uae\",\n                                     message:\"Task Added\",\n                                     date_changed:\"due_date\"\n                                 })\n                                 .then(function(doc)\n                                        { \n                                       \n                                            msgprint(`Notification ${doc.subject} is Created`);\n                \n                                         });\n                                        \n                            //           else  if(d.message.length>0)\n                            //              {\n                            //                  frappe.db.delete_doc(\"Task\",f[i]);\n                            //   msgprint(\"Task Deleted\")  \n                                             \n                            //              }\n                            }\n                            \n                            \n                        }\n                                })\n                               \n                            })\n                            }\n                        }\n             \n                })\n            \n            \n            \n            \n    $.each(frm.doc._project_users,function(i,item)\n        {\n            a[i]=item.users;\n         });\n        // console.log(\"a\",a);\n         frappe.call\n         ({\n                        \"method\":\"frappe.client.get_list\",\n                        \"args\":\n                        {\n                            \"doctype\":\"User Permission\",\n                            \"filters\":{\"for_value\":frm.doc.name},\n                            \"fields\":[\"user\",\"name\"]\n                        },\n                    \n                        callback:function(d)\n                        {\n                            console.log(\"frappeCall\")\n                            if(d.message)\n                            {\n                                //console.log(d.message)\n                                $.each(d.message,function(i,item)\n                                {\n                                      b[i]=item.user;\n                                      c[i]=item.name;\n \n                                });\n\t                        }\n\t                        console.log(\"a\",a);\n\t                        console.log(\"b\",b);\n\t                        console.log(\"c\",c);\n\t                        \n\t                        if(a.length>0 && b.length>0)\n                            {\n                                 for(var i=0;i<b.length;i++)\n                                 {\n                                  if(a.includes(b[i]) !==true)\n                                    {\n                                      // frappe.db.delete_doc(\"User Permission\",b[i].name);\n                                      frappe.db.delete_doc(\"User Permission\",c[i]);\n                                    }\n                                 }\n                                 for(i=0;i<a.length;i++)\n                                 {\n                                            if(b.includes(a[i]) !==true)\n                                            {\n                                                frappe.db.insert\n\t                                            ({\n                                                    \"doctype\":'User Permission',    \n                                                    \"user\":a[i],\n                                                    \"allow\":\"Project\",\n                                                     'for_value':frm.doc.name,\n                                                    'apply_to_all_doctypes':1,\n                                                })\n                                                .then(function(doc)\n                                                { \n                                                    msgprint(`Created User Permission`);\n                                                }); \n                                            }\n                                    \n                                 }\n                            }\n                            \n                            if(a.length===0 && b.length>0)\n                            {\n                                console.log(\"delete\");\n                                for(var j=0;j<b.length;j++)\n                                 {\n                                  // frappe.db.delete_doc(\"User Permission\",b[j].name);\n                                  frappe.db.delete_doc(\"User Permission\",c[j]);\n                                 }   \n                            }\n                            \n                            if(a.length>0 && b.length===0)\n                            {\n                                //console.log(\"insert\");\n                                for(var k=0;k<a.length;k++)\n                                {\n                                  // console.log(\"s\");\n                                                frappe.db.insert\n\t                                            ({\n                                                    \"doctype\":'User Permission',    \n                                                    \"user\":a[k],\n                                                    \"allow\":\"Project\",\n                                                     'for_value':frm.doc.name,\n                                                    'apply_to_all_doctypes':1,\n                                                })\n                                                .then(function(doc)\n                                                { \n                                                    msgprint(`Created User Permission`);\n                                                }); \n                                }\n                            }\n                            a =[];\n                            b=[];\n                            c=[];\n                }\n    \n        })\n}\n    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2022-07-12 10:28:24.685787",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item',\n{\n\trefresh(frm) \n\t{\n\t\tcur_frm.dashboard.hide();\n\t},\n\titem_code(frm)\n\t{\n\t     frm.set_value(\"item_name\",frm.doc.item_code);  \n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead Message",
  "enabled": 1,
  "modified": "2022-07-12 10:45:36.888492",
  "name": "Lead Message-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": " var a=[]; \nfrappe.ui.form.on('Lead Message', \n{\n\tlead_class(frm)\n\t{\n\t    cur_frm.clear_table(\"recipients_users\");\n\t  \n\t    \t    frappe.call\n         \t      \n                            ({\n                                  \"method\":\"frappe.client.get_list\",\n                                  \"args\":\n                                {\n                            \"doctype\":\"Lead\",\n                            \"filters\":{\"class1\":frm.doc.lead_class,\"company\":frm.doc.company},\n                             \"fields\":[\"email_id\"]\n                                },\n                        callback:function(d)\n                        {\n                        if(d)\n                            {  \n                                //console.log(d.message)\n                              $.each(d.message,function(i, v)\n                                     {\n                                        a[i]=v.email_id\n                                        console.log(\"Mails are....\",a)\n                                     });\n                                    \n                                \n                                      for(var i=0;i<a.length;i++)\n                                            {\n                                              \n                                            var child = cur_frm.add_child(\"recipients_users\");\n                                            console.log(\"users are........\",a)\n                                            frappe.model.set_value(child.doctype, child.name, \"users\",a[i]);\n                                             cur_frm.refresh_field(\"recipients_users\");\n                                            }\n                                            \n                                     a=[]\n                            }\n                            \n                        }\n                            \n                            })\n\t    \n\t},\n\t\n\t\n// \tcustomer_group(frm)\n// \t{\n// \t    var b=[];\n\t    \n// \t     frappe.call\n         \t      \n//                             ({\n//                                   \"method\":\"frappe.client.get_list\",\n//                                   \"args\":\n//                                 {\n//                             \"doctype\":\"Customer\",\n//                             \"filters\":{\"customer_group\":frm.doc.customer_group},\n//                              \"fields\":[\"email\"]\n//                                 },\n                                \n//                          callback:function(d)\n//                         {\n//                         if(d)\n//                             {  \n//                               $.each(d.message,function(i, v)\n//                                      {\n//                                         b[i]=v.email\n//                                         });\n//                                         for(var i=0;i<b.length;i++)\n//                                             {\n//                                             var child = cur_frm.add_child(\"user\");\n//                                             frappe.model.set_value(child.doctype, child.name, \"users\",b[i]);\n//                                             }\n//                                              cur_frm.refresh_field(\"user\");\n                                        \n//                             }\n//                             }\n//                             });\n// \t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2022-04-23 13:36:37.187045",
  "name": "Opportunity-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Opportunity', {\n\trefresh(frm) {\n\t cur_frm.dashboard.hide()\n\tcur_frm.page.remove_inner_button(__('Supplier Quotation'),  __('Create'));\n\tcur_frm.page.remove_inner_button(__('Request For Quotation'),  __('Create'));\n\tcur_frm.page.remove_inner_button(__('Quotation'),  __('Create'));\n\t},\n\tonload(frm){\n\t    if(frm.doc.company==\"Confederate CA\")\n        {\n      frm.set_value(\"naming_series\",\"CF-DXB-OPP-.YYYY.-\")\n        }\n        else {\n             frm.set_value(\"naming_series\", \"CF-EKM-OPP-.YYYY.-\")\n         }\n\t},\n\t\n\tcontact_day:function(frm) \n    {\n    var date = new Date(frm.doc.contact_day).toISOString().slice(0,10);\n    console.log(date);\n        if (date == get_today()) {\n          // frappe.msgprint(__(\"meeting scheduled Today\"));\n            frm.set_value(\"meeting_scheduled\",1) \n        }\n        else\n        {\n            frm.set_value(\"meeting_scheduled\",0) \n        }\n    },\n    \n    company(frm){\n         if(frm.doc.company==\"Confederate CA\")\n        {\n      frm.set_value(\"naming_series\",\"CF-DXB-OPP-.YYYY.-\")\n        }\n        else {\n             frm.set_value(\"naming_series\", \"CF-EKM-OPP-.YYYY.-\")\n         }\n    },\n     before_save:function(frm) \n     {\n         if(frm.doc.company==\"Confederate CA\")\n        {\n      frm.set_value(\"naming_series\",\"CF-DXB-OPP-.YYYY.-\")\n        }\n        else {\n             frm.set_value(\"naming_series\", \"CF-EKM-OPP-.YYYY.-\")\n         }\n         \n         if(frm.doc.contact_day < get_today())\n            {\n                frappe.throw(\"You can't schedule the meeting for a past date. \");\n                return false; \n            }\n     }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-07-22 15:37:00.826530",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var a=[];\nvar b=[];\nvar s=[];\nvar duetime=[];\nvar actualtime=[];\nvar i;\n\nvar x;\nvar y;\nvar d;\nfrappe.ui.form.on('Sales Order', \n{\n\tonload:function(frm)\n    {\n             \n         setTimeout(() =>{\n            frm.set_df_property(\"naming_series\",\"hidden\",1)\n          },0)\n        if(frm.doc.company===\"Confederate CA\")\n        {\n           //frm.set_value(\"set_warehouse\",\"Stores - CF\");\n            \n            frm.set_value(\"naming_series\",\"PI-DXB-.#####.\");\n            frm.set_value(\"tc_name\",\"UAE\")\n             frm.set_value(\"sign\",\"Sign\")\n            \n        }\n        else\n        {\n           frm.set_value(\"naming_series\",\"PI-EKM-.#####.\") ;\n           //frm.set_value(\"set_warehouse\",\"Stores - CI\");\n        }\n         frm.set_value(\"year\",frappe.datetime.nowdate().split(\"-\")[0]);\n         \n         \n    },\n    customer:function(frm)\n    {\n      \n        if(frm.doc.company===\"Confederate CA\")\n        {\n           frm.set_value(\"set_warehouse\",\"Stores - CF\");\n            \n        }\n        else\n        {\n            frm.set_value(\"set_warehouse\",\"Stores - CI\");\n        }\n    },\n    \n    company:function(frm)\n    {\n        if(frm.doc.company===\"Confederate CA\")\n        {\n            frm.set_value(\"naming_series\",\"PI-DXB-.#####.\");\n             frm.set_value(\"set_warehouse\",\"Stores - CF\")\n             frm.set_value(\"tc_name\",\"UAE\")\n              frm.set_value(\"sign\",\"Sign\")\n              frm.set_value(\"taxes_and_charges\",\"UAE VAT 5% - CF\")\n        }\n        else\n        {\n           frm.set_value(\"naming_series\",\"PI-EKM-.#####.\") ;\n           frm.set_value(\"set_warehouse\",\"Stores - CI\")\n        }\n    },\n    \n    refresh:function(frm)\n    {\n        \n        cur_frm.dashboard.hide()\n        frm.get_field(\"items\").grid.cannot_add_rows = true;\n        $('*[data-fieldname=\"items\"]').find('.grid-remove-rows').hide();\n   \n         \n        setTimeout(() =>{\n           // frm.set_df_property(\"naming_series\",\"hidden\",1)\n            cur_frm.page.remove_inner_button(__('Hold'),  __('Status'));\n            cur_frm.page.remove_inner_button(__('Close'),  __('Status'));\n            cur_frm.page.remove_inner_button(__('Subscription'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Pick List'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Delivery Note'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Payment Request'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Work Order'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Material Request'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Request for Raw Materials'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Purchase Order'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Project'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Get Items From'));\n            cur_frm.page.remove_inner_button(__('Update Items'));\n        },10);\n\n        $(\"[data-doctype='Payment Request']\").hide();\n        $(\"[data-doctype='Journal Entry']\").hide();\n        $(\"[data-doctype='Pick List']\").hide();\n        $(\"[data-doctype='Maintenance Visit']\").hide();\n        $(\"[data-doctype='Auto Repeat']\").hide();\n        $(\"[data-doctype='Material Request']\").hide();\n        $(\"[data-doctype='Purchase Order']\").hide();\n        $(\"[data-doctype='Project']\").hide();\n        $(\"[data-doctype='Delivery Note']\").hide();\n        $(\"[data-doctype='Work Order']\").hide();\n        $(\"[data-doctype='Quotation']\").hide();\n        $(\"[data-doctype='Project']\").hide();\n        $(\".form-link-title\").hide();\n    },\n    month(frm)\n\t{\n\t    cur_frm.clear_table(\"items\");\n        cur_frm.refresh_fields(\"items\");\n        frm.trigger('monthandyear');\n        frm.trigger('servicefilter');\n        \n        a=[];\n        b=[];\n        s=[];\n\t    \n   },\n    monthandyear:function(frm)\n   {\n        y=frm.doc.year;\n\t  \n\t    if(frm.doc.month===\"January\")\n        {\n            x=\"01\";\n        }\n        else if(frm.doc.month===\"February\")\n        {\n          x=\"02\";  \n        }\n        else if(frm.doc.month===\"March\")\n        {\n            x=\"03\";\n        }\n        else if(frm.doc.month===\"April\")\n        {\n            x=\"04\";\n        }\n        else if(frm.doc.month===\"May\")\n        {\n            x=\"05\";\n        }\n        else if(frm.doc.month===\"June\")\n        {\n            x=\"06\";\n        }\n        else if(frm.doc.month===\"July\")\n        {\n            x=\"07\";\n        }\n\t    else if(frm.doc.month===\"August\")\n        {\n            x=\"08\";\n        }\n        else if(frm.doc.month===\"September\")\n        {\n            x=\"09\";\n        }\n        else if(frm.doc.month===\"October\")\n        {\n            x=\"10\";\n        }\n        else if(frm.doc.month===\"November\")\n        {\n            x=\"11\";\n        }\n        else if(frm.doc.month===\"December\")\n        {\n            x=\"12\";\n        }\n        \n        d = new Date(y,x, 0).getDate();\n\n   },\n   \n    servicefilter:function(frm)\n   {\n    //   console.log(\"filter\");\n    //   console.log(y);\n    //   console.log(x);\n        if(y !==undefined && x !==undefined)\n\t    {\n\t       // console.log(y+'-'+x+'-'+\"01\");\n\t        frappe.call\n\t         ({\n                \"method\": \"frappe.client.get_list\",\n                \"args\": \n                {\n                    \"doctype\": \"Task\",\n                    \"filters\": \n                        [\n                            ['customer', \"=\",frm.doc.customer], \n                            ['created_date', \"between\", [y+'-'+x+'-'+\"01\",y+'-'+x+'-'+d]],\n                           // ['status',\"=\",[\"UnAssigned\",\"Open\",\"Working\",\"Pending Review\",\"Overdue\",\"Completed\"]]\n                        ],\n                    \"fields\":[\"name\",\"status\",\"subject\",\"employee_due_time\",\"employee_actual_time\"]\n       \n                },\n                callback:function(d)\n                {\n                    if(d.message[0])\n                    {\n                        $.each(d.message,function(i,item)\n                        {\n                            a[i]=item.name;\n                            b[i]=item.status;\n                            s[i]=item.subject;\n                            duetime[i]=item.employee_due_time;\n                            actualtime[i]=item.employee_actual_time;\n                        });\n                    //     console.log(\"a1\",a);\n\t                   // console.log(\"b1\",b);\n\t                                    //||Open\",\"Working\",\"Pending Review\",\"Overdue\")\n\t                    if(b.includes(\"Partially Paid\")||b.includes(\"Billed Not Paid\")||b.includes(\"Paid\"))\n\t                    {\n\t                         msgprint(\"Already created sales Invoice against these services\");\n\t                         frm.disable_save();\n\t                    }\n\t                    else\n\t                    {\n\t                       frm.enable_save(); \n\t                      \n\t                       for(var i=0;i<s.length;i++)\n\t                       {\n\t                            var child = cur_frm.add_child(\"items\");\n\t                            frappe.model.set_value(child.doctype, child.name, \"item_code\",s[i]);\n\t                            frappe.model.set_value(child.doctype, child.name, \"qty\",duetime[i]);\n\t                            frappe.model.set_value(child.doctype, child.name, \"actual_hour_taken\",actualtime[i]);\n\t                            frappe.model.set_value(child.doctype, child.name, \"delivery_date\",frappe.datetime.nowdate());\n\t                            \n\t                       }\n\t                       cur_frm.refresh_field(\"items\");\n\n\t                    }\n                    }\n                    else\n                    {\n                        msgprint(\"No unbilled services exist against this customer in \"+frm.doc.month);\n\t                    frm.disable_save();\n                    }\n                    \n                }\n            });\n\t    }\n   },\n   \n   after_save:function(frm)\n   {\n        frm.reload_doc();\n   }\n   \n   \n   \n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2022-07-12 10:48:36.870330",
  "name": "User-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var x;\nfrappe.ui.form.on('User',\n{\n    onload:function(frm)\n    {\n        if(frm.doc.email ===undefined)\n        {\n            x=\"new\";\n        }\n        else\n        {\n            x=\"exist\";\n        }\n    },\n\tcompany(frm) \n\t{\n\t    if(frm.doc.company==\"Confederate CA\")\n\t    {\n\t        // console.log(\"jjjjjjjjjjjjjj\")\n\t        frm.set_value(\"time_zone\",\"Asia/Dubai\");\n\t    }\n\t    if(frm.doc.company==\"Confederate In\")\n\t    {\n\t        // console.log(\"jjjjjjjjjjjjjj\")\n\t        frm.set_value(\"time_zone\",\"Asia/Kolkata\");\n\t    }\n\t\n\t},\n// \tcompany(frm)\n// \t{\n// \t    console.log(\"jjjjjjjjjjjjjj\")\n// \t},\n\tafter_save:function(frm)\n\t{\n\t                if(x===\"new\")\n\t                {\n\t                                  frappe.db.insert\n                                      ({\n                                         doctype:'User Permission',\n                                        user:frm.doc.name,\n                                        allow:\"Customer\",\n                                        for_value:\"Default Customer\",\n                                        apply_to_all_doctypes:1,\n\n                                        });\n                                        x=\"exist\";\n\t                }\n\t                                  \n \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Price",
  "enabled": 1,
  "modified": "2022-05-05 16:33:20.583065",
  "name": "Item Price-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item Price', \n{\n\tonload(frm) \n\t{\n\t   // console.log(frm.doc.brand)\n\t   // if(frm.doc.brand===undefined)\n\t   // {\n\t        frm.set_df_property(\"brand\", \"hidden\", true);\n\t        \t//frm.set_df_property('brand', 'reqd', 1);\n\t        \t//console.log(\"OOOOOO\")\n\t   // }\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2022-07-12 10:32:59.236078",
  "name": "Lead-List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.listview_settings['Lead'] = \n{\n    \n hide_name_column: true, \n}\n\n\n\n\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Compensatory Leave Request",
  "enabled": 1,
  "modified": "2022-07-12 10:32:10.290445",
  "name": "Compensatory Leave Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Compensatory Leave Request', {\n\tafter_save(frm) {\n\t    \n\t frappe.db.insert\n                        ({\n                         doctype:'Leave Application',\n                    \n                         employee:frm.doc.employee,\n                         employee_name:frm.doc.employee_name,\n                         leave_type:frm.doc.leave_type,\n                         work_from:frm.doc.work_from_date,\n                         work_to:frm.doc.work_end_date,\n                         status:\"Open\",\n                        //  leave_approver:frm.doc.leave_approver,\n                        //  leave_approver_name:frm.doc.approver,\n                         from_date:frm.doc.leave_from_date,\n                         to_date:frm.doc.leave_to_date,\n                         half_day:frm.doc.half_day,\n                         half_date:frm.doc.half_day_date,\n                         description:frm.doc.reason_for_leave\n\n                        })\n                        .then(function(doc)\n                        { \n                            msgprint(`Leave application created for ${doc.employee_name}`);\n                        \n                        });   \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance",
  "enabled": 1,
  "modified": "2022-07-12 10:34:49.727493",
  "name": "Attendance-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Attendance', \n{\n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Allocation",
  "enabled": 1,
  "modified": "2022-07-12 10:35:41.567075",
  "name": "Leave Allocation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var t1=[]\nvar t2=[]\nvar t3=[]\nvar t4=[]\nvar t5=[]\n\n\nvar u1=[];\nvar u2=[];\nvar u3=[];\nvar u4=[];\n\nvar u44=[];\n\n\nvar p1=0;\nvar p2=0;\nvar p3=0;\nvar p4=0;\nvar p5=0;\n\n\nvar s1=0;\nvar\ts2=0;\nvar\ts3=0;\nvar\ts4=0;\n\n\nfunction dateFormat(inputDate, format) {\n    //parse the input date\n    const date = new Date(inputDate);\n\n    //extract the parts of the date\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();    \n\n    //replace the month\n    format = format.replace(\"MM\", month.toString().padStart(2,\"0\"));        \n\n    //replace the year\n    if (format.indexOf(\"yyyy\") > -1) \n    {\n        format = format.replace(\"yyyy\", year.toString());\n    }\n    else if (format.indexOf(\"yy\") > -1)\n    {\n        format = format.replace(\"yy\", year.toString().substr(2,2));\n    }\n\n    //replace the day\n    format = format.replace(\"dd\", day.toString().padStart(2,\"0\"));\n\n    return format;\n}\n\n\nfrappe.ui.form.on('Leave Allocation',\n{\n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2022-07-12 10:36:28.126555",
  "name": "Leave Application-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Leave Application', \n{\n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Period",
  "enabled": 1,
  "modified": "2022-07-12 10:37:35.296323",
  "name": "Payroll Period-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payroll Period',\n{\n\trefresh(frm) \n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 1,
  "modified": "2022-07-12 10:38:25.430328",
  "name": "Salary Slip-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Slip',\n{\n\trefresh(frm)\n\t{\n\t    cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure Assignment",
  "enabled": 1,
  "modified": "2022-07-12 10:39:57.389962",
  "name": "Salary Structure Assignment-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Structure Assignment',\n{\n    refresh(frm)\n    {\n         cur_frm.dashboard.hide();   \n    },\n\tbefore_save(frm)\n\t{\n\tif(frm.doc.salary_structure==\"Salary Structure CI\")\n\t{\n\t    frm.set_value(\"company\",\"Confederate In\")\n\t}\n\telse\n\t{\n\t     frm.set_value(\"company\",\"Confederate CA\")\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Entry",
  "enabled": 1,
  "modified": "2022-07-12 10:40:53.277324",
  "name": "Payroll Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payroll Entry',\n{\n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2022-07-13 08:34:29.691560",
  "name": "Employee-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var values;\n\nvar a1=[];\nvar a2=[];\nvar a3=[];\nvar a4=[];\nvar a5=[];\nvar q1=[];\n\nfunction dateFormat(inputDate, format) {\n    //parse the input date\n    const date = new Date(inputDate);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();    \n\n    //replace the month\n    format = format.replace(\"MM\", month.toString().padStart(2,\"0\"));        \n\n    //replace the year\n    if (format.indexOf(\"yyyy\") > -1) \n    {\n        format = format.replace(\"yyyy\", year.toString());\n    }\n    else if (format.indexOf(\"yy\") > -1)\n    {\n        format = format.replace(\"yy\", year.toString().substr(2,2));\n    }\n\n    //replace the day\n    format = format.replace(\"dd\", day.toString().padStart(2,\"0\"));\n\n    return format;\n}\n\n\nfrappe.ui.form.on('Employee', {\n// \tonload(frm) \n// \t{\n// \t    //cur_frm.save()\n//         frm.set_df_property('relieving_date_is_on',  'read_only',1);\n//         frm.set_df_property('joined_on',  'read_only',1);\n//         frm.set_df_property('probation_period_',  'read_only',1);\n//         frm.set_df_property('confirm_on',  'read_only',1);\n//         frm.set_df_property('previous_experience',  'read_only',1);\n        \n//       // frm.set_value(\"joined_on\",frm.doc.date_of_joining)\n//         var w4=frm.doc.joined_on\n//       \tconsole.log(\"-----\",w4)\n//       \tvar w=flt(w4.split(\"-\")[1])\n//         var year=flt(w4.split(\"-\")[0])\n                                                     \n//         console.log(\"joinin_date\",w)\n//         console.log(\"joinined year\",year)\n// \t\t     if(frm.doc.joined_on!==undefined)\n//               {\n                  \n//               var date = new Date(w4);\n                                \n//               var difdt = new Date(new Date() - date);\n//               console.log(difdt,\"new date\")\n               \n//                 console.log((difdt.toISOString().slice(0, 4) - 1970) + \"Year\");\n//                 console.log((difdt.getMonth()) + \"Month\")\n                \n//                  if((difdt.toISOString().slice(0, 4) - 1970)==\"0\")\n//                 {\n//                 frm.set_value(\"current_company_experience\",(difdt.getMonth()) + \"M \" + difdt.getDate() + \"D\");\n//                   frm.set_df_property('current_company_experience',  'read_only',1);\n\n//                 }\n//                 else\n//                 {\n//                 frm.set_value(\"current_company_experience\",(difdt.toISOString().slice(0, 4) - 1970) + \"Y \" + (difdt.getMonth()) + \"M \" + difdt.getDate() + \"D\");\n//                  frm.set_df_property('current_company_experience',  'read_only',1);\n                    \n//                 }\n               \n//               }\n              \n//               var t=0;\n//               if(frm.doc.external_work_history.length>0)\n              \n//               {\n                   \n//                   $.each(frm.doc.external_work_history, function(i, item) \n//                   {\n//                       q1[i]=item.total_experience;\n//                       console.log(q1);\n                       \n//                         const array = q1[i].split(' ')[0];\n                       \n//                         console.log(array,\"------------\");\n                        \n//                         for(var i=0;i<array.length;i++)\n//                         {\n//                             t=t+flt(array[i])\n//                             console.log(t)\n//                         }\n                       \n                       \n//                   });\n                   \n//                   console.log(t,\"22222222222222\")\n//                   frm.set_value(\"previous_experience\",t+\"Y\")\n//                     frm.set_df_property('previous_experience',  'read_only',1);\n//               }\n              \n//               if(frm.doc.previous_experience!==undefined)\n//                   {\n//                       //console.log((difdt.toISOString().slice(0, 4) - 1970) + t,\"------------------\")\n//                       var u=(difdt.toISOString().slice(0, 4) - 1970) + t\n//                       //console.log(u,\"===================\")\n//                       //frm.set_value(\"total_experience\",)\n//                     frm.set_value(\"total_experience\",(difdt.toISOString().slice(0, 4) - 1970)+t + \"Y \" + (difdt.getMonth()) + \"M \" );\n//                     frm.set_df_property('total_experience',  'read_only',1);\n            \n//                   }\n//                   else\n//                   {\n//                       frm.set_value(\"previous_experience\",\"0\")\n                     \n//                     frm.set_value(\"total_experience\",(difdt.toISOString().slice(0, 4) - 1970) + \"Y \" + (difdt.getMonth()) + \"M \");\n//                     frm.set_df_property('total_experience',  'read_only',1);\n            \n//                   }\n// \t\tif(frm.doc.resignation_letter_submitted_on != undefined && frm.doc.notice_required ==\"Yes\")\n//                 {\n//               var today= get_today()\n               \n//               console.log(\"Today \",today)\n//                 var rel = frm.doc.relieving_date_is_on\n//                 if(rel >= today)\n                \n//                 {\n//                   var diff = frappe.datetime.get_day_diff(rel,today); \n//                   console.log(\"The difference is ...\",diff)\n//                   frm.set_value(\"short_fall_in_notice_period\",diff)\n//                   frm.set_df_property('short_fall_in_notice_period',  'read_only',1);\n//                 }\n//     }\n\t\n\t\t\n// \t},\n\t\n// \tdate_of_joining:function(frm)\n//     {\n        \n//         var d=frm.doc.date_of_joining\n//         console.log(d,\"Joined\")\n//         frm.set_value(\"joined_on\",d)\n//         frm.set_value(\"probation_period_\",\"180\")\n//         console.log(frm.doc.probation_period_,\"probation_period\")\n//         var day =  frappe.datetime.add_days(frm.doc.date_of_joining, 180)\n//         console.log(day,\"day\")\n//         frm.set_value(\"confirm_on\",day)\n//         frm.set_df_property('confirm_on',  'read_only',1);\n       \n          \n                     \n//     },\n//     salutation:function(frm)\n//     {\n//         if(frm.doc.salutation ==\"Miss\" || frm.doc.salutation == \"Ms\" || frm.doc.salutation ==\"Mrs\")\n//         {\n//             frm.set_value(\"gen\",\"Female\")\n//         }\n//         else\n//         {\n//           frm.set_value(\"gen\",\"Male\") \n//         }\n//     },\n    // company:function(frm)\n    // {\n    //     if(frm.doc.company==\"Confederate CA\")\n    //     {\n    //         frm.set_value(\"branch\",\"Dubai\")\n    //     }\n    //     else\n    //     {\n    //         frm.set_value(\"branch\",\"Ernakulam\")\n    //     }\n    // },\n    //  before_save:function(frm)\n    // {\n    //     if(frm.doc.resignation_letter_submitted_on != undefined && frm.doc.notice_required ==\"Yes\")\n    //     {\n    //     console.log(frm.doc.resignation_letter_submitted_on)\n         \n    //     console.log(frm.doc.notice_period)\n    //     var rel = frappe.datetime.add_days(frm.doc.resignation_letter_submitted_on, frm.doc.notice_period)\n    //     frm.set_value(\"relieving_date_is_on\",rel)\n    //     frm.set_df_property('relieving_date_is_on',  'read_only',1);\n        \n    //     }\n       \n        \n    // },\n    refresh:function(frm, cdt, cdn) {\n        frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n     cur_frm.dashboard.hide()\n     setTimeout(() => {\n         \t$(\".form-reviews\").hide();\n         $(\".form-assignments\").hide();\n\t//\t$(\".form-attachments\").hide();\n\t\t$(\".form-shared\").hide();\n\t\t$(\".form-tags\").hide();\n\t\t$(\".form-sidebar-stats\").hide();\n\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n         \n        \n    $(\"[data-doctype='Shift Request']\").hide();\n    $(\"[data-doctype='Shift Assignment']\").hide()\n    $(\"[data-doctype='Expense Claim']\").hide();\n    $(\"[data-doctype='Travel Request']\").hide()\n    $(\"[data-doctype='Employee Advance']\").hide();\n    $(\"[data-doctype='Employee Grievance']\").hide()\n    $(\"[data-doctype='Employee Benefit Application']\").hide();\n    $(\"[data-doctype='Employee Benefit Claim']\").hide()\n    $(\"[data-doctype='Appraisal']\").hide();\n    $(\"[data-doctype='Training Event']\").hide()\n    $(\"[data-doctype='Training Result']\").hide();\n    $(\"[data-doctype='Training Feedback']\").hide()\n    $(\"[data-doctype='Employee Skill Map']\").hide()\n    $(\"[data-doctype='Employee Checkin']\").hide();\n     $(\"[data-doctype='Additional Salary']\").hide();\n    $(\".form-link-title\").hide();\n    $(\"[data-doctype='Employee Separation']\").hide()\n    $(\"[data-doctype='Employee Onboarding']\").hide()\n     $(\"[data-doctype='Employee Incentive']\").hide()\n    }, 10);\n    \n    \n    \n     \n    cur_frm.fields_dict['salary_update_details'].grid.wrapper.find('.btn-open-row').hide();\n     cur_frm.fields_dict['salary_update_details'].grid.wrapper.find('.grid-insert-row-below').hide();\n    frm.get_field(\"salary_update_details\").grid.cannot_add_rows = true;\n     $('*[data-fieldname=\"salary_update_details\"]').find('.grid-remove-rows').hide();\n      cur_frm.fields_dict['salary_update_details'].grid.wrapper.find('.btn-open-row').hide();\n    frm.fields_dict[\"salary_update_details\"].grid.wrapper.find('.grid-insert-row-below').hide();\n    frm.fields_dict[\"salary_update_details\"].grid.wrapper.find('.grid-insert-row').hide();\n    frm.fields_dict.salary_update_details.grid.grid_buttons.addClass('hidden');\n      console.log(frm.doc.relieving_date,\"%%%%%%%%%%%%%\")\n       \n//     if(frm.doc.status==\"Inactive\")\n//     {\n//   var today= get_today()\n   \n//   console.log(\"Today \",today)\n//     var rel = frm.doc.relieving_date\n//     if(rel >= today)\n    \n//     {\n//       var diff = frappe.datetime.get_day_diff(rel,today); \n//       console.log(\"The difference is ...\",diff)\n//       frm.set_value(\"short_fall_in_notice_period\",diff)\n//     }\n//     }\n\t},\n    \n    update_salary:function(frm,cdt,cdn)\n    {\n        let d = new frappe.ui.Dialog({\n    title: 'Enter details',\n    fields: [\n            {\n            label: 'New Salary',\n            fieldname: 'new_salary',\n            fieldtype: 'Currency',\n            \"reqd\": 1,\n            },\n            \n            { \n            label: 'From Date',\n            fieldname: 'from_date',\n            fieldtype: 'Date',\n            \"reqd\": 1,\n            },\n            {\n \n     \t fieldname: \"salary_structure\",\n    \t\t fieldtype: \"Link\",\n    \t\t label: \"Salary Structure\",\n    \t\t options: \"Salary Structure\",\n    \t\t \"reqd\": 1,\n        \t}\n            ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                \n                frm.set_value(\"allocated_salary\",values.new_salary)\n                frm.set_value(\"from_date\",values.from_date)\n                frm.set_value(\"salary_structure\",values.salary_structure)\n                if(values.salary_structure == \"Salary Structure CI\")\n                {\n                frappe.db.insert\n                                ({\n                                 doctype:'Salary Structure Assignment',\n                            \n                                  employee:frm.doc.name,\n                                  salary_structure:values.salary_structure,\n                                  from_date:values.from_date,\n                                  base:values.new_salary,\n                                  company:\"Confederate In\"\n                                })\n                                \n                                .then(function(doc)\n                                { \n                                    msgprint(`Salary structure assignment created for ${doc.employee_name}`);\n                                \n                                });\n                }\n                if (values.salary_structure == \"Salary Structure CA\")\n                {\n                     frappe.db.insert\n                                ({\n                                 doctype:'Salary Structure Assignment',\n                            \n                                  employee:frm.doc.name,\n                                  salary_structure:values.salary_structure,\n                                  from_date:values.from_date,\n                                  base:values.new_salary,\n                                  company:\"Confederate CA\"\n                                })\n                                \n                                .then(function(doc)\n                                { \n                                    msgprint(`Salary structure assignment created for ${doc.employee_name}`);\n                                \n                                });\n                }\n                // frm.save(\"Submit\");\n                \n                console.log(values);\n                d.hide();\n                \n            if(values.salary_structure == \"Salary Structure CI\")  \n            {\n                var a = [\"Basic\",\"HRA\",\"Conveyance\",\"Medical Allowance\",\"Special Allowance\",\"Monthly CTC\",\"Annual CTC\"];\n                 var s1=[];\n                 var s2=[];\n                 var s3=[];\n                 var s6=[];\n                 \n                 \n                  console.log(frm.doc.salary_breakup_details,\"----------------------\")\n                  console.log(frm.doc.allocated_salary,\"++++++++++++++++\")\n                  \n                  \n                 var sum = flt(frm.doc.allocated_salary) * .4\n                   s1.push(sum)\n                   \n                   var hra = flt(sum) * .4\n                   s1.push(hra)\n                    \n                  var con = flt(sum) * .4\n                   s1.push(con)\n                    \n                             \n                   var med=1250\n                   s1.push(med)\n                   \n                   var spl = flt(frm.doc.allocated_salary) - flt(sum) - flt(hra) -flt(con) - flt(1250)\n                   s1.push(spl)\n        \n                   \n        \n                   var monthly = flt(frm.doc.allocated_salary)\n                   s1.push(monthly)\n                   var annual = flt(frm.doc.allocated_salary) * 12\n                   s1.push(annual)\n                   console.log(\"Anual salary is \",annual)\n                   console.log(s1,\"=======================\")\n                   \n                 \n                 if(frm.doc.salary_breakup_details.length===0)\n                     {\n                                     cur_frm.clear_table(\"salary_breakup_details\");\n                                    \n                                     for(var i=0;i<a.length;i++)\n                                           \n                                        {\n                                            \n                                                 var child = cur_frm.add_child(\"salary_breakup_details\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"salary_component\",a[i]);\n                                                 frappe.model.set_value(child.doctype, child.name, \"revised_salary\",s1[i]);\n                                                 \n                                        }\n                                    cur_frm.refresh_field(\"salary_breakup_details\");\n                                }\n                                \n                                \n                 else\n                 {\n                     \n                     \n                     $.each(frm.doc.salary_breakup_details, function(i, item) \n                            {\n                     \n                              s2[i]=item.salary_component\n                              s3[i]=item.revised_salary\n                              \n                               var y=((s1[i]-s3[i])/s3[i])*100\n                               s6.push(y)\n                               console.log(s6,\"iiiiiiiiiiiiiii\")\n                              \n                               \n                            }) \n                            cur_frm.clear_table(\"salary_breakup_details\");\n                            \n                                for(var j=0;j<s2.length;j++)\n                                {\n                                    \n                                  \n                                    var child = cur_frm.add_child(\"salary_breakup_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_component\",s2[j]);\n                                    frappe.model.set_value(child.doctype, child.name, \"previous_salary\",s3[j]);\n                                    frappe.model.set_value(child.doctype, child.name, \"revised_salary\",s1[j]);\n                                    \n                                    if(s6[j]==\"0\")\n                                    {\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_increment_in_\",\"0\");\n                                    }\n                                    else\n                                    {\n                                       frappe.model.set_value(child.doctype, child.name, \"salary_increment_in_\",s6[j]); \n                                    }\n                                    \n                                   \n                                    \n                                    \n                                }\n                               \n                              cur_frm.refresh_field(\"salary_breakup_details\");\n                            \n                             \n                            \n                 \n                 }\n            }\n            \n             if(values.salary_structure == \"Salary Structure CA\")  \n            {\n                 var a = [\"Basic\",\"HRA\",\"Conveyance\",\"Medical Allowance\",\"Special Allowance\",\"Monthly CTC\",\"Annual CTC\"];\n                 var s1=[];\n                 var s2=[];\n                 var s3=[];\n                 var s6=[];\n                 \n                 \n                  console.log(frm.doc.salary_breakup_details,\"----------------------\")\n                  console.log(frm.doc.allocated_salary,\"++++++++++++++++\")\n                  \n                  \n                   var sum = flt(frm.doc.allocated_salary) * .4\n                   s1.push(sum)\n                   \n                   var hra = flt(sum) * .4\n                   s1.push(hra)\n                    \n                  var con = flt(sum) * .4\n                   s1.push(con)\n                    \n                             \n                   var med=1250\n                   s1.push(med)\n                   \n                   var spl = flt(frm.doc.allocated_salary) - flt(sum) - flt(hra) -flt(con) - flt(1250)\n                   s1.push(spl)\n        \n                   var monthly = flt(frm.doc.allocated_salary)\n                   s1.push(monthly)\n                   var annual = flt(frm.doc.allocated_salary) * 12\n                   s1.push(annual)\n                   console.log(\"Anual salary is \",annual)\n                   console.log(s1,\"=======================\")\n                   \n                 \n                 if(frm.doc.salary_breakup_details.length===0)\n                     {\n                                     cur_frm.clear_table(\"salary_breakup_details\");\n                                    \n                                     for(var i=0;i<a.length;i++)\n                                           \n                                        {\n                                            \n                                                 var child = cur_frm.add_child(\"salary_breakup_details\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"salary_component\",a[i]);\n                                                 frappe.model.set_value(child.doctype, child.name, \"revised_salary\",s1[i]);\n                                                 \n                                        }\n                                    cur_frm.refresh_field(\"salary_breakup_details\");\n                                }\n                                \n                                \n                 else\n                 {\n                     \n                     \n                     $.each(frm.doc.salary_breakup_details, function(i, item) \n                            {\n                     \n                              s2[i]=item.salary_component\n                              s3[i]=item.revised_salary\n                              \n                               var y=((s1[i]-s3[i])/s3[i])*100\n                               s6.push(y)\n                               console.log(s6,\"iiiiiiiiiiiiiii\")\n                              \n                               \n                            }) \n                            cur_frm.clear_table(\"salary_breakup_details\");\n                            \n                                for(var j=0;j<s2.length;j++)\n                                {\n                                    \n                                  \n                                    var child = cur_frm.add_child(\"salary_breakup_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_component\",s2[j]);\n                                    frappe.model.set_value(child.doctype, child.name, \"previous_salary\",s3[j]);\n                                    frappe.model.set_value(child.doctype, child.name, \"revised_salary\",s1[j]);\n                                    \n                                    if(s6[j]==\"0\")\n                                    {\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_increment_in_\",\"0\");\n                                    }\n                                    else\n                                    {\n                                       frappe.model.set_value(child.doctype, child.name, \"salary_increment_in_\",s6[j]); \n                                    }\n                                    \n                                   \n                                    \n                                    \n                                }\n                               \n                              cur_frm.refresh_field(\"salary_breakup_details\");\n                            \n                             \n                            \n                 \n                 }\n            }\n            \n            }\n        });\n        \n        d.show();\n        \n            }\n    \n        \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2022-07-22 15:38:30.694596",
  "name": "Quotation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation',\n{\n\trefresh(frm)\n\t{\n\t    \n\t   setTimeout(() =>\n        {\n            \n             cur_frm.page.remove_inner_button(__('Opportunity'),  __('Get Items From'));\n             cur_frm.page.remove_inner_button(__('Sales Order'),  __('Create'));\n             cur_frm.page.remove_inner_button(__('Subscription'),  __('Create'));\n             cur_frm.page.remove_inner_button(__('Set as Lost'));\n            // cur_frm.page.remove_inner_button(__('Quotation'),  __('Get Items From'));\n             //cur_frm.page.remove_inner_button(__('Fetch Timesheet'));\n        },0);\n\n        //cur_frm.dashboard.hide()\n        \n        frm.add_custom_button('Customer', () => \n        {\n           \n            // frappe.route_options = {\"customer_name\": frm.doc.party_name};\n            document = frappe.new_doc(\"Customer\");\n            frappe.set_route(\"Form\", \"Customer\", document.name);\n            // console.log(frm.doc.party_name,\"LLLLLLLLLL\")\n            // document = frappe.new_doc(\"Customer\");\n            // frm.set_value(\"customer_name\",frm.doc.party_name)\n\n\n            \n            \n        })\n        \n        frm.change_custom_button_type('Customer', null, 'primary');\n        \n\t\t// your code here\n\t},\n\t\n\tonload(frm)\n\t{\n\t    \n\t    //cur_frm.dashboard.hide()\n\t    setTimeout(() =>\n        {\n            \n             cur_frm.page.remove_inner_button(__('Opportunity'),  __('Get Items From'));\n            cur_frm.page.remove_inner_button(__('Sales Order'),  __('Create'));\n            cur_frm.page.remove_inner_button(__('Subscription'),  __('Create'));\n\n             //cur_frm.page.remove_inner_button(__('Create'),  __('Sales Order'));\n             //cur_frm.page.remove_inner_button(__('Fetch Timesheet'));\n        },0);\n\t   // frm.remove_custom_button('Opportunity', 'Get Items From\n\t   \n\t   console.log(frm.doc.company)\n\t   if(frm.doc.company==\"Confederate In\")\n\t   {\n\t       frm.set_value(\"currency\",\"INR\")\n\t       frm.set_value(\"selling_price_list\",\"Selling INR\")\n\t      frm.set_value(\"company1\",\"Confederates Tax Consultancy-Billing-1\")\n\t      frm.set_value(\"naming_series\",\"EKM-QTN-.YYYY.-\")\n\t       \n\t   }\n\t   else if(frm.doc.company==\"Confederate CA\")\n\t   {\n\t       frm.set_value(\"currency\",\"AED\")\n\t       frm.set_value(\"selling_price_list\",\"Selling UAE\")\n\t      frm.set_value(\"company1\",\"Confederates Tax Consultancy-Billing\")\n\t      frm.set_value(\"naming_series\",\"DXB-QTN-.YYYY.-\")\n\t      frm.set_value(\"tc_name\",\"UAE\")\n         frm.set_value(\"sign\",\"Sign\")\n        frm.set_value(\"taxes_and_charges\",\"UAE VAT 5% - CF\")\n\t   }\n\t},\n\t\n\tcompany(frm)\n\t{\n\t       \n\t   if(frm.doc.company==\"Confederate In\")\n\t   {\n\t       frm.set_value(\"currency\",\"INR\");\n\t       frm.set_value(\"selling_price_list\",\"Selling INR\");\n\t       \n\t   }\n\t   else if(frm.doc.company==\"Confederate CA\")\n\t   {\n\t       frm.set_value(\"currency\",\"AED\");\n\t       frm.set_value(\"selling_price_list\",\"Selling UAE\");\n\t   }\n\t}\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task Notification",
  "enabled": 1,
  "modified": "2022-07-12 23:32:47.456077",
  "name": "Task Notification-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Task Notification',\n{\n\tonload(frm) {\n\t    console.log(frm.doc.message_to_client)\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 1,
  "modified": "2024-02-05 11:01:36.331709",
  "name": "Task-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "var f;\nvar a;\nvar n;\nvar e;\nvar dt;\nvar t;\nvar c;\nvar button_click=\"normal\";\nvar totaltime=0;\nvar t_assigned_to;\nvar status1;\nvar emply=[];\nvar emply_email=[];\nvar dx_sales_invoice;\nvar assigned_to1=undefined\n// var c_emply=[];\n// var fltr_emply=[];\n// var fltr_emply_email=[];\n\n//var timeleft;\nfrappe.ui.form.on('Task',\n{\n    \n    \n    employee_actual_time:function(frm)\n    {\n        if(frm.doc.employee_actual_time)\n        {\n            frm.set_value(\"status\",\"Working\")\n            frm.save()\n        }\n        \n    },\n    \n    \n    \n    onload:function(frm)\n    {\n        console.log(\"LK\")\n        emply=[];\n        emply_email=[];\n        \n         frm.get_field(\"time_sheet\").grid.cannot_add_rows = true;\n            $('*[data-fieldname=\"time_sheet\"]').find('.grid-remove-rows').hide();\n      if(frm.doc.assigned_to !=undefined)\n      {\n          if(frm.doc.assigned_to.length>0)\n          {\n              t_assigned_to=frm.doc.assigned_to;\n          }\n          else\n          {\n              t_assigned_to=undefined;\n          }\n      }\n       \n      if(frm.doc.employee_email !=undefined)\n      {\n          if(frm.doc.employee_email.length>0)\n          {\n              assigned_to1=frm.doc.employee_email;\n          }\n          else\n          {\n              assigned_to1=undefined;\n          }\n      }\n       \n       \n        status1=frm.doc.status;\n        frm.trigger(\"employee_name_filter\");\n\n        setTimeout(() =>\n        {\n            $(\"[data-doctype='Expense Claim']\").hide();\n        }, 10);\n    \n                        frappe.call\n                        ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":{\"user_id\":frm.doc.assigned_to},\n                                },\n                            callback:function(d)\n                            {\n                                if(d.message[0])\n                                {\n\t                                e=d.message[0].name;\n\t                            }\n\t                        }\n\t                    }); \n\t                    \n\t      if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\")||frappe.user.has_role(\"Customer\"))\n         {\n             frm.set_df_property(\"employee_name\",\"read_only\",0)\n             frm.set_df_property(\"due_date\",\"read_only\",0)\n             frm.set_df_property(\"employee_due_time\",\"read_only\",0)\n             frm.set_df_property(\"message_to_client\",\"hidden\",0)\n              setTimeout(() =>{frm.enable_save()},10)\n         }\n         else\n         {\n             frm.set_df_property(\"employee_name\",\"read_only\",1)\n             frm.set_df_property(\"due_date\",\"read_only\",1)\n             frm.set_df_property(\"employee_due_time\",\"read_only\",1)\n             frm.set_df_property(\"message_to_client\",\"hidden\",1)\n             //frm.disable_save();\n              setTimeout(() =>{frm.disable_save()},10)\n         }\n             \n              \n        var button_click=\"normal\";\n    },\n  \n    assigned_to:function(frm)\n    {\n        if(frm.doc.assigned_to !=undefined)\n        {\n            if(frm.doc.assigned_to.length>0)\n            {\n                        frappe.call\n                        ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":{\"user_id\":frm.doc.assigned_to},\n                                  // \"fields\":[\"name\"]\n                                },\n                            callback:function(d)\n                            {\n                                if(d.message[0])\n                                {\n                                    //console.log(d);\n\t                                e=d.message[0].name;\n\t                               // console.log(\"employee\",e);\n\t                      \n\t                             }\n\t               \n\t                         }\n\t                    }); \n\t                    \n\t                    frm.set_value(\"status\",\"Open\");\n            }\n            else\n            {\n                frm.set_value(\"status\",\"UnAssigned\");\n            }\n        }\n        else\n        {\n            frm.set_value(\"status\",\"UnAssigned\");\n        }\n                      \n\t                    button_click=\"normal\";\n        \n    },\n    \n    employee_email:function(frm)\n    {\n        if(frm.doc.employee_email !=undefined)\n        {\n            if(frm.doc.employee_email.length>0)\n            {\n\t                    frm.set_value(\"status\",\"Open\");\n            }\n            else\n            {\n                frm.set_value(\"status\",\"UnAssigned\");\n            }\n        }\n        else\n        {\n            frm.set_value(\"status\",\"UnAssigned\");\n        }\n        \n    },\n    \n    employee_name_filter:function(frm)\n    {  \n        if(frm.doc.customer !=undefined)\n        {\n            if(frm.doc.customer.length>0)\n            {\n                  frappe.call\n                                    ({\n                                        \"method\":\"frappe.client.get\",\n                                        \"args\":\n                                            {\n                                                \"doctype\":\"Customer\",\n                                                \"filters\":{\"customer_name\":frm.doc.customer},\n                                                  //\"fields\":[\"name\",\"user\"]\n                                            },\n                                             callback:function(d)\n                                             {\n                                                 emply[0]=\" \"\n                                                 emply_email[0]=\" \"\n                                                //  emply.push(\" \");\n                                                //  emply=\" \"\n                                                // console.log(\"yyyyyyy\",d);\n                                                 if(d.message.user.length>0)\n                                                 {\n                                                    $.each(d.message.user,function(i,v)\n                                                    {\n                                                        emply.push(v.employee);\n                                                        emply_email.push(v.employee_email);\n                                                    });\n                                                 }\n                                                 //console.log(\"emply\",emply)\n                                                frm.set_df_property('employee_name', 'options',emply);\n                                             }\n                                    }); \n            }\n            else\n            {\n                  frm.set_df_property('employee_name', 'options',emply);\n            }\n        }\n        else\n        {\n              frm.set_df_property('employee_name', 'options',emply);\n        }\n                                 \n            \n    },\n    \n    employee_name:function(frm)\n    {\n        if(frm.doc.employee_name !=undefined)\n        {\n            if(frm.doc.employee_name.length>0)\n            {\n                var indx=emply.indexOf(frm.doc.employee_name);\n                frm.set_value(\"assigned_to\",emply_email[indx]);\n            }\n            else\n            {\n                 frm.set_value(\"assigned_to\",undefined);\n            }\n            \n            frm.set_value(\"status\",\"Open\");\n        }\n        else\n        {\n            frm.set_value(\"status\",\"UnAssigned\");\n        \n             frm.set_value(\"assigned_to\",undefined);\n        }\n       \n    },\n    \n    due_date1:function(frm)\n    {\n      frm.set_value(\"due_date\",frm.doc.due_date1)  \n    },\n    \n    due_time1:function(frm)\n    {\n      frm.set_value(\"employee_due_time\",frm.doc.due_time1)  \n    },\n\n    refresh:function(frm)\n\t{  \n          // $('input[data-fieldname=\"timer\"]').bold()\n       \n\t     var dx=frm.add_custom_button(__(\"Start\"), function() \n         {\n                frappe.call\n                ({\n                    \"method\":\"frappe.client.get_list\",\n                    \"args\":\n                    {\n                        \"doctype\":\"Task\",\n                        \"filters\":\n                            \t{\n                                \t\"assigned_to\":frm.doc.assigned_to,\n        \t\t\t\t\t\t\t //\"status\":\"Open\",\n        \t\t\t\t\t\t\t \"not_completed\":1,\n                                },\n                        },\n                        callback:function(r)\n                        {\n                            if(r.message[0])\n                            {\n                                if(r.message[0].name!=frm.doc.name)\n                                {\n                                    msgprint(\"Please complete the task \"+r.message[0].name.link(\"https://erp.confederateca.com/app/task/\"+r.message[0].name));\n                                    fromactivity=\"true\";\n                                }\n                                // if(frm.doc.time_sheet.length>0)\n                                // {\n                                //     c=frm.doc.time_sheet.length-1;\n                                // }\n                                // else\n                                // {\n                                //     c=0;\n                                // }\n                                // cur_frm.get_field(\"time_sheet\").grid.grid_rows[c].remove();\n                                // frm.refresh_field('time_sheet');\n                                \n                                  dx.show();\n                                  dx1.hide();\n                                  dx_pending_review.hide();\n                                  dx_completed.hide();\n            \n                            }\n                            else\n                            {\n                                // if(d1.from_time ===undefined||null)\n                                // {\n                                         var childTable = cur_frm.add_child(\"time_sheet\");\n                                        //childTable.from_time=frappe.datetime.now_date(); \n                                        \n                                       \n                                \n                                \n                                        frm.set_df_property(\"timer\",\"hidden\",0);\n                                        frm.set_value(\"timeleft\",\"1\");\n                            \n                                        var newtime1;\n                                        if(frm.doc.company==\"Confederate In\")\n                                        {\n                                          const d = new Date();\n                        \t\t           var hr  =  d.getHours();//getting hour part from today's date.\n                                          var min =  d.getMinutes();//getting minutes part from today's date.\n                                          var sec =  d.getSeconds();//getting seconds part from today's date.\n                        \t\t            newtime1=hr+\":\"+min+\":\"+sec;\n                        \t\t           newdate1=frappe.datetime.now_date(); \n                        \t\t           //frappe.model.set_value(cdt,cdn,\"from_time\",newdate1+\" \"+newtime1);\n                        \t\t           childTable.from_time=newdate1+\" \"+newtime1;\n                        \t\t           \n                        \t\t           \n                        \t\t           frm.set_value(\"start_time\",newdate1+\" \"+newtime1);\n                                        }\n                                        else\n                                        {\n                                            newdate1=frappe.datetime.now_datetime();\n                                            //frappe.model.set_value(cdt,cdn,\"from_time\",frappe.datetime.now_datetime());\n                                            childTable.from_time=frappe.datetime.now_datetime();\n                                            frm.set_value(\"start_time\",frappe.datetime.now_datetime());\n                                        }\n                                        \n                                        frm.set_value(\"status\",\"Working\");\n                                        refresh_field(\"from_time\");\n                                        refresh_field(\"start_time\");\n        \n                                         frm.set_value(\"not_completed\",1);\n                                         frm.set_value(\"timeleft\",1);\n                                         cur_frm.refresh_fields(\"time_sheet\");\n                                         \n                                         \n                                      //  frm.set_indicator_formatter('timer', null, 'primary');\n                                       \n                                      // document.getElementById('timer').style.borderColor = \"red\";\n                                       \n                                        //   frm.set_indicator_formatter('timer',\n                                        //     function (doc)\n                                        //     {\n                                        //         return (doc.status ==\"Working\" || doc.status==\"Open\") ? \"green\" : \"orange\"\n                                        //     })\n                                                                         \n                                         \n                                         \n                                         \n                                         \n                                         \n                                         \n                                        //   dx.hide();\n                                        //   dx1.show();\n                                        //   dx_pending_review.show();\n                                        //      if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\"))\n                                        //      {\n                                        //          dx_completed.show(); \n                                        //      }\n                                        //      else\n                                        //      {\n                                        //          dx_completed.hide(); \n                                        //      }\n                                          \n                                          \n                                        frm.save();\n                            //   }\n                            }\n                        }\n                });\n             \n           \n\t              \n             \n             \n             \n             \n             \n             \n         });\n         frm.change_custom_button_type('Start', null, 'primary');\n          \n         var dx1=frm.add_custom_button(__(\"Stop\"), function() \n         {\n             $.each(frm.doc.time_sheet,function(i,v)\n             {\n                if(v.to_time===undefined)\n                {\n                  if(frm.doc.company==\"Confederate In\")\n                    {\n                      const d = new Date();\n    \t\t          var hr  =  d.getHours();//getting hour part from today's date.\n                      var min =  d.getMinutes();//getting minutes part from today's date.\n                      var sec =  d.getSeconds();//getting seconds part from today's date.\n    \t\t           var newtime1=hr+\":\"+min+\":\"+sec;\n    \t\t           newdate2=frappe.datetime.now_date(); \n    \t\t           //frappe.model.set_value(cdt,cdn,\"to_time\",newdate2+\" \"+newtime1);\n    \t\t           v.to_time=newdate2+\" \"+newtime1;\n                    } \n                    else\n                    {\n    \t\t         // frappe.model.set_value(cdt,cdn,\"to_time\",frappe.datetime.now_datetime());\n    \t\t          v.to_time=frappe.datetime.now_datetime();\n                    }\n               \n                    var dt1_date=v.from_time.split(\" \")[0];\n                    var dt1_time=v.from_time.split(\" \")[1];\n                    var dt1_day=dt1_date.split(\"-\")[2];\n                    var dt1_month=dt1_date.split(\"-\")[1];\n                    var dt1_yr=dt1_date.split(\"-\")[0];\n                    var newdatetime1=dt1_month+\"-\"+dt1_day+\"-\"+dt1_yr+\" \"+dt1_time;\n                    var new_dt1=new Date(newdatetime1);\n                    var new_dt1_in_sec=new_dt1.getTime();\n                  // console.log(\"new_dt1_in_sec\",new_dt1_in_sec);\n                    \n                    \n                    var dt2_date=v.to_time.split(\" \")[0]\n                    var dt2_time=v.to_time.split(\" \")[1]\n                    var dt2_day=dt2_date.split(\"-\")[2];\n                    var dt2_month=dt2_date.split(\"-\")[1];\n                    var dt2_yr=dt2_date.split(\"-\")[0];\n                    var newdatetime2=dt2_month+\"-\"+dt2_day+\"-\"+dt2_yr+\" \"+dt2_time;\n                    var new_dt2=new Date(newdatetime2);\n                    var new_dt2_in_sec=new_dt2.getTime();\n                    //console.log(\"new_dt2_in_sec\",new_dt2_in_sec);\n                    \n                    var timediff_in_sec=new_dt2_in_sec-new_dt1_in_sec;\n                    var timediff_in_hour=timediff_in_sec/3600000;\n            \n                    //frappe.model.set_value(cdt,cdn,\"hours1\",flt(timediff_in_hour,3)); \n                    v.hours1=flt(timediff_in_hour,3);\n                    refresh_field(\"hours1\");  \n                   \n                   \n                    frm.set_value(\"not_completed\",0);\n                        \n                        if(frm.doc.time_sheet.length>0)\n        \t            {\n        \t        \n        \t                for(var i=0;i<frm.doc.time_sheet.length;i++)\n        \t                {\n        \t                    totaltime=flt(totaltime,4)+flt(frm.doc.time_sheet[i].hours1,4);\n        \t                    frm.set_value(\"employee_actual_time\",flt(totaltime,4));\n        \t                    refresh_field(\"employee_actual_time\");\n        \t                }\n        \t                totaltime=0;\n        \t            }\n                        \n                        var x=flt(frm.doc.employee_actual_time)-flt(frm.doc.employee_due_time)\n                        \n        \t             if(flt(x)>0)\n        \t             {\n        \t                 frm.set_value(\"employee_extratime\",flt(x));\n        \t             }\n        \t             else\n        \t             {\n        \t                frm.set_value(\"employee_extratime\",\"0\");\n        \t             }\n        \t             \n        \t             refresh_field(\"employee_extratime\");\n        \t                \n        \t                frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                {\n                                    \"doctype\":\"Timesheet\",\n                                    \"filters\":\n                                    \t{\n                                        \t\"employee\":e,\n                \t\t\t\t\t\t\t \"date\":v.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[2],\n                \t\t\t\t\t\t\t \"status\":\"Draft\",\n                                        },\n                                },\n                                callback:function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                \t                    frappe.call\n                \t                    ({\n                                            \"method\":\"timesheet_row_add\",\n                                            \"args\":{\n                                                     timesheet:r.message[0].name,\n                                                     date :v.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[2],\n                                                     employee:e,\n                                                     activity_type:v.activity_type,\n                                                     task:frm.doc.name,\n                                                     customer:frm.doc.customer,\n                                                     from_time:v.from_time,\n                                                     to_time:v.to_time,\n                                                     hours:v.hours1,\n                                                     \n                                                    },\n                                        });\n                \n                                    }\n                                    else\n                                    {\n                                         frappe.db.insert\n                \t                       ({\n                                            doctype:'Timesheet',    \n                                            date:v.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v.to_time.split(\" \")[0].split(\"-\")[2],\n                                            employee:e,\n                                            time_logs:\n                                            [\n                                              {\n                                                'activity_type':v.activity_type,\n                                                'task':frm.doc.name,\n                                                'customer':frm.doc.customer,\n                                                'from_time':v.from_time,\n                                                'to_time':v.to_time,\n                                                'hours':v.hours1,\n                                              },\n                                            ]\n                                            });\n                                    }\n                                }\n                            });\n                            \n                             frm.set_value(\"timeleft\",\"0\");\n                             frm.set_df_property(\"timer\",\"hidden\",1);\n                             dx.show()\n                             dx1.hide();\n                             cur_frm.save();      \n                }\n                \n             });\n         });\n         frm.change_custom_button_type('Stop', null, 'danger');\n         \n         var dx_pending_review=frm.add_custom_button(__(\"Pending Review\"), function() \n         {\n         \n             frm.set_value(\"status\",\"Pending Review\")\n             frm.save();\n         })\n         frm.change_custom_button_type('Pending Review', null, 'warning');\n         \n         var dx_completed=frm.add_custom_button(__(\"Completed\"), function() \n         {\n             frm.set_value(\"status\",\"Completed\")\n             dx_sales_invoice.show();\n             frm.save();\n             dx_sales_invoice.show();\n              \n         })\n          frm.change_custom_button_type('Completed', null, 'success');\n         \n         dx_sales_invoice=frm.add_custom_button(__(\"Sales Invoice\"), function()\n        {\n\t\t\tfrappe.set_route(\"List\", \"Sales Invoice\",frm.doc.sales_invoice);\n\t\t\t\n\t\t\n\t\t});\n\t\tfrm.change_custom_button_type('Sales Invoice', null, 'info');\n\t\t\n\t\t// frm.get_field(\"time_sheet\").grid.cannot_add_rows = true;\n      // $('*[data-fieldname=\"time_sheet\"]').find('.grid-remove-rows').hide();\n\t\n\t\n\tconsole.log(\"s1\",frm.doc.subject)\n\tconsole.log(\"s2\",frm.doc.subject1)\n\t\n\t\tif(frm.doc.subject !=undefined)\n\t\t{\n    \t    if(frm.doc.assigned_to !=undefined)\n    \t    {\n    \t     // console.log(\"case1\")\n    \t        if(frm.doc.assigned_to.length>0)\n    \t        {\n    \t          // console.log(\"case2\")\n    \t           //console.log(\"frm.doc.owner\",frappe.session.user)\n    \t           //console.log(\"frm.doc.assigned_to\",frm.doc.assigned_to)\n    \t            if(frm.doc.assigned_to==frappe.session.user)\n    \t            {\n    \t              // console.log(\"case3\")\n                \t     if(frm.doc.status==\"UnAssigned\"||frm.doc.status==\"Partially Paid\"||frm.doc.status==\"Paid\"||frm.doc.status==\"Billed Not Paid\")\n                         {\n                          // console.log(\"case4\")\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         dx_sales_invoice.hide();\n                \t         \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1)\n                         }\n                         else if(frm.doc.status==\"Open\")\n                         {\n                          // console.log(\"case5\")\n                             dx1.hide()\n                \t         dx.show() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         dx_sales_invoice.hide();\n                \t         dx_sales_invoice.hide();\n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1) \n                         }\n                         else if(frm.doc.status==\"Working\")\n                         {\n                            //console.log(\"case6\")\n                             if(frm.doc.not_completed==0)\n                             {\n                                // console.log(\"case7\")\n                                dx1.hide()\n                \t            dx.show() \n                \t            dx_pending_review.show();\n                \t            dx_completed.hide();\n                \t            dx_sales_invoice.hide();\n                \t            frm.set_df_property(\"time_sheet\",\"hidden\",0) \n                             }\n                             else\n                             {\n                              // console.log(\"case7\")\n                                dx1.show()\n                \t            dx.hide() \n                \t            dx_pending_review.hide();\n                \t            dx_completed.hide();\n                \t            dx_sales_invoice.hide();\n                \t            frm.set_df_property(\"time_sheet\",\"hidden\",0)  \n                             }\n                         }\n                         else if(frm.doc.status==\"Pending Review\")\n                         {\n                             // console.log(\"case8\")\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t          if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\")||frappe.user.has_role(\"Customer\"))\n                \t          {\n                \t               dx_completed.show();\n                \t          }\n                \t          else\n                \t          {\n                \t              dx_completed.hide();\n                \t          }\n                \t       \n                \t         dx_sales_invoice.hide();\n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                         }\n                         else if(frm.doc.status==\"Completed\")\n                         {\n                          // console.log(\"case9\")\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                             dx_completed.hide(); \n                             frm.trigger(\"salesinvoice_button\")\n                \t         //dx_sales_invoice.show(); \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                         }\n    \t            }\n    \t            else\n    \t            {\n    \t               // console.log(\"case10\")\n    \t                  if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\")||frappe.user.has_role(\"Customer\"))\n                          {\n                              //console.log(\"case11\")\n                                  if(frm.doc.status==\"Pending Review\")\n                                 {\n                                  //   console.log(\"case12\")\n                                     dx1.hide()\n                        \t         dx.hide() \n                        \t         dx_pending_review.hide();\n                        \t         dx_completed.show();\n                        \t         dx_sales_invoice.hide();\n                        \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                                 }\n                                 else if(frm.doc.status==\"Completed\")\n                                 {\n                                  // console.log(\"case13\")\n                                     dx1.hide()\n                        \t         dx.hide() \n                        \t         dx_pending_review.hide();\n                                     dx_completed.hide(); \n                                      frm.trigger(\"salesinvoice_button\")\n                            \t     //dx_sales_invoice.show(); \n                        \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                                 }\n                                 else\n                                 {\n                                     dx1.hide()\n                \t                 dx.hide() \n                \t                 dx_pending_review.hide();\n                \t                 dx_completed.hide();\n                \t                 dx_sales_invoice.hide(); \n                                 }\n        \n                              frm.set_df_property(\"employee\", \"read_only\", 0);\n                              frm.set_df_property(\"due_date\", \"read_only\", 0);\n                              frm.set_df_property(\"employee_due_time\", \"read_only\", 0);\n                              frm.enable_save()\n                                  // frm.set_df_property(\"employee\")\n                          }\n                          else\n                          {\n                             // console.log(\"case14\")\n                              frm.set_df_property(\"employee\", \"read_only\", 1);\n                              frm.set_df_property(\"due_date\", \"read_only\", 1);\n                              frm.set_df_property(\"employee_due_time\", \"read_only\", 1);\n                              frm.disable_save()\n                              dx1.hide()\n                    \t         dx.hide() \n                    \t         dx_pending_review.hide();\n                    \t         dx_completed.hide();\n                    \t         \n                    \t         if(frm.doc.status==\"Completed\")\n                    \t         {\n                    \t            // console.log(\"case17\")\n                    \t              frm.trigger(\"salesinvoice_button\")\n                    \t             //dx_sales_invoice.show()\n                    \t         }\n                    \t         else\n                    \t         {\n                    \t             // console.log(\"case18\")\n                    \t              frm.trigger(\"salesinvoice_button\")\n                    \t            //dx_sales_invoice.hide();\n                    \t         }\n                          }\n    \t            }\n    \t        }\n    \t        else\n    \t        {\n    \t         //  console.log(\"case15\")\n    \t                     dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         dx_sales_invoice.hide();\n                \t         \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1)\n    \t        }\n    \t    }\n    \t    else\n    \t    {\n    \t      // console.log(\"case16\")\n    \t                     dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         dx_sales_invoice.hide();\n                \t         \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1) \n    \t    }\n\t\t}\n\t\telse if(frm.doc.subject1 !=undefined)\n\t\t{\n\t\t    console.log(\"case2\"  ,frappe.session.user)\n\t\t    dx_sales_invoice.hide();\n\t\t    \n\t\t    if(frm.doc.employee_email !=undefined)\n    \t    {\n    \t     \n    \t        if(frm.doc.employee_email.length>0)\n    \t        {\n    \t            if(frm.doc.employee_email==frappe.session.user)\n    \t            {\n                \t     if(frm.doc.status==\"UnAssigned\")\n                         {\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1)\n                         }\n                         else if(frm.doc.status==\"Open\")\n                         {\n                             dx1.hide()\n                \t         dx.show() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1) \n                         }\n                         else if(frm.doc.status==\"Working\")\n                         {\n                            //console.log(\"case6\")\n                             if(frm.doc.not_completed==0)\n                             {\n                                // console.log(\"case7\")\n                                dx1.hide()\n                \t            dx.show() \n                \t            dx_pending_review.show();\n                \t            dx_completed.hide();\n                \t            frm.set_df_property(\"time_sheet\",\"hidden\",0) \n                             }\n                             else\n                             {\n                              // console.log(\"case7\")\n                                dx1.show()\n                \t            dx.hide() \n                \t            dx_pending_review.hide();\n                \t            dx_completed.hide();\n                \t            frm.set_df_property(\"time_sheet\",\"hidden\",0)  \n                             }\n                         }\n                         else if(frm.doc.status==\"Pending Review\")\n                         {\n                             // console.log(\"case8\")\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t          if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\")||frappe.user.has_role(\"Customer\"))\n                \t          {\n                \t               dx_completed.show();\n                \t          }\n                \t          else\n                \t          {\n                \t              dx_completed.hide();\n                \t          }\n    \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                         }\n                         else if(frm.doc.status==\"Completed\")\n                         {\n                          // console.log(\"case9\")\n                             dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                             dx_completed.hide(); \n                            //  frm.trigger(\"salesinvoice_button\")\n                \t         //dx_sales_invoice.show(); \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                         }\n                        \n                        frm.disable_save()\n    \t            }\n    \t            else\n    \t            {\n    \t               // console.log(\"case10\")\n    \t                  if(frappe.user.has_role(\"Ceo In\")||frappe.user.has_role(\"Ceo Uae\")||frappe.user.has_role(\"Customer\"))\n                          {\n                              //console.log(\"case11\")\n                                  if(frm.doc.status==\"Pending Review\")\n                                 {\n                                  //   console.log(\"case12\")\n                                     dx1.hide()\n                        \t         dx.hide() \n                        \t         dx_pending_review.hide();\n                        \t         dx_completed.show();\n                        \t       //  dx_sales_invoice.hide();\n                        \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                                 }\n                                 else if(frm.doc.status==\"Completed\")\n                                 {\n                                  // console.log(\"case13\")\n                                     dx1.hide()\n                        \t         dx.hide() \n                        \t         dx_pending_review.hide();\n                                     dx_completed.hide(); \n                                    //   frm.trigger(\"salesinvoice_button\")\n                            \t     //dx_sales_invoice.show(); \n                        \t         frm.set_df_property(\"time_sheet\",\"hidden\",0)\n                                 }\n                                 else\n                                 {\n                                     dx1.hide()\n                \t                 dx.hide() \n                \t                 dx_pending_review.hide();\n                \t                 dx_completed.hide();\n                \t               //  dx_sales_invoice.hide(); \n                                 }\n        \n                            //   frm.set_df_property(\"employee\", \"read_only\", 0);\n                            //   frm.set_df_property(\"due_date\", \"read_only\", 0);\n                            //   frm.set_df_property(\"employee_due_time\", \"read_only\", 0);\n                              frm.enable_save()\n                                  // frm.set_df_property(\"employee\")\n                          }\n                          else\n                          {\n                             // console.log(\"case14\")\n                            //   frm.set_df_property(\"employee\", \"read_only\", 1);\n                            //   frm.set_df_property(\"due_date\", \"read_only\", 1);\n                            //   frm.set_df_property(\"employee_due_time\", \"read_only\", 1);\n                              frm.disable_save()\n                              dx1.hide()\n                    \t         dx.hide() \n                    \t         dx_pending_review.hide();\n                    \t         dx_completed.hide();\n                    \t         \n                    \t       //  if(frm.doc.status==\"Completed\")\n                    \t       //  {\n                    \t       //     // console.log(\"case17\")\n                    \t       //       frm.trigger(\"salesinvoice_button\")\n                    \t       //      //dx_sales_invoice.show()\n                    \t       //  }\n                    \t       //  else\n                    \t       //  {\n                    \t       //      // console.log(\"case18\")\n                    \t       //       frm.trigger(\"salesinvoice_button\")\n                    \t       //     //dx_sales_invoice.hide();\n                    \t       //  }\n                          }\n    \t            }\n    \t        }\n    \t        else\n    \t        {\n    \t         //  console.log(\"case15\")\n    \t                     dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t       //  dx_sales_invoice.hide();\n                \t         \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1)\n    \t        }\n    \t    }\n    \t    else\n    \t    {\n    \t      // console.log(\"case16\")\n    \t                     dx1.hide()\n                \t         dx.hide() \n                \t         dx_pending_review.hide();\n                \t         dx_completed.hide();\n                \t       //  dx_sales_invoice.hide();\n                \t         \n                \t         frm.set_df_property(\"time_sheet\",\"hidden\",1) \n    \t    }\n\t\t}\n\t\telse\n\t\t{\n\t\t    dx1.hide()\n            dx.hide() \n            dx_pending_review.hide();\n            dx_completed.hide();\n            dx_sales_invoice.hide();\n            frm.set_df_property(\"time_sheet\",\"hidden\",1) \n\t\t}\n\t    \n\t    \n\t   \n\t    \n    \n\n       \n\n      // document.getElementById('timer').css({'borderColor':'red'}); //.style.borderColor = \"red\";\n        // timer1.style.borderColor=\"red\"\n        \n\n\n\n          // frm.page.wrapper.find(\"timer\").css({'borderColor':'red'}); \n\n         frm.page.wrapper.find(\".comment-box\").css({'display':'none'}); \n         frm.page.sidebar.remove();\n\n        cur_frm.dashboard.hide()\n        \n    //   frm.set_df_property(\"status\",\"hidden\",1)\n        \n         $('*[data-fieldname=\"time_sheet\"]').find('.grid-remove-rows').hide();\n\n\t     var p=frappe.user.has_role(\"Ceo\");\n\n// \t\t// if(frm.doc.timeleft===\"1\"&& button_click!==\"Timesheet\" )\n// \t\t if(frm.doc.timeleft===\"1\")\n// \t\t {\n// \t\t     console.log(\"timerrrrrrrrrrrrrr\")\n// \t\t            var timerstart=frm.doc.start_time;\n// \t\t            var dt1_date=timerstart.split(\" \")[0];\n//                     var dt1_time=timerstart.split(\" \")[1];\n//                     var dt1_day=dt1_date.split(\"-\")[2];\n//                     var dt1_month=dt1_date.split(\"-\")[1];\n//                     var dt1_yr=dt1_date.split(\"-\")[0];\n//                     var newdatetime1=dt1_month+\"-\"+dt1_day+\"-\"+dt1_yr+\" \"+dt1_time;\n//                     var timerstart=new Date(newdatetime1);\n//                     var timerstart_in_sec=timerstart.getTime();\n//                     // console.log(\"timerstart\",timerstart);\n//                     // console.log(\"timerstart_in_sec\",timerstart_in_sec);\n// \t\t            var currenttime1;\n// \t\t            if(frm.doc.company==\"Confederate In\")\n//                     {\n//                       const d = new Date();\n//     \t\t           var hr  =  d.getHours();//getting hour part from today's date.\n//                       var min =  d.getMinutes();//getting minutes part from today's date.\n//                       var sec =  d.getSeconds();//getting seconds part from today's date.\n//     \t\t           var newtime1=hr+\":\"+min+\":\"+sec;\n//     \t\t           newdate2=frappe.datetime.now_date(); \n//     \t\t           currenttime1=newdate2+\" \"+newtime1;\n//                     } \n//                     else\n//                     {\n//     \t\t          currenttime1=frappe.datetime.now_datetime();\n//                     }\n\t\t\n\t\t\n\t\t\n//                 var currenttime=new Date(currenttime1);\n//                 var currenttime_in_sec=currenttime.getTime();\n//                 // console.log(\"currenttime\",currenttime);\n//                 // console.log(\"currenttime_in_sec\",currenttime_in_sec);\n//                 var diff_in_millisec=currenttime_in_sec-timerstart_in_sec;\n//                 var totalSeconds=diff_in_millisec*0.001;\n//                 // console.log(\"diff_in_millisec\",diff_in_millisec);\n//                 // console.log(\"totalSeconds\",totalSeconds);\n                \n                \n//                  var timerVariable = setInterval(countUpTimer, 1000);\n//                 // var totalSeconds = 0;\n        \n//                  function countUpTimer()\n//                  {\n//                     ++totalSeconds;\n//                     var hour = Math.floor(totalSeconds / 3600);\n//                     var minute = Math.floor((totalSeconds - hour * 3600) / 60);\n//                     var seconds = totalSeconds - (hour * 3600 + minute * 60);\n//                   // frm.set_value(\"timer1\",hour + \":\" + minute + \":\" + seconds);\n//                     frm.set_value(\"timer\",hour + \":\" + minute + \":\" + seconds);\n        \n//                     if(frm.doc.timeleft <= 0)\n//                     {\n//                       // frm.set_value(\"timer1\",undefined);\n//                         frm.set_value(\"timer\",undefined);\n//                         clearInterval(timerVariable);\n//                     }\n//                  }\n// \t\t }\n// \t\t else\n// \t\t {\n// \t\t     frm.set_df_property(\"timer\",\"hidden\",1);\n// \t\t }\n\t\t \n\t\t frm.trigger(\"timer_style\");\n    },\n    \n    timer_style:function(frm)\n    {\n       $('input[data-fieldname=\"timer\"]').css(\"color\",\"white\")\n          $('input[data-fieldname=\"timer\"]').css(\"background-color\",\"#1c75bc\") \n          $('input[data-fieldname=\"timer\"]').css(\"width\",\"100px\")\n           $('input[data-fieldname=\"timer\"]').css(\"font-weight\",\"bold\")\n            $('input[data-fieldname=\"timer\"]').css(\"font-weight\",\"bold\") //text-align: center\n            $('input[data-fieldname=\"timer\"]').css(\"text-align\",\"center\")  \n    },\n    \n    salesinvoice_button:function(frm)\n    {\n       var yr=frm.doc.created_date.split(\"-\")[0]\n       var mnth=frm.doc.created_date.split(\"-\")[1]\n       var day = new Date(yr,mnth, 0).getDate();\n        var b=[];\n        if(frm.doc.created_date !==undefined)\n\t    {\n\t       // console.log(yr+'-'+mnth+'-'+day);\n\t        frappe.call\n\t         ({\n                \"method\": \"frappe.client.get_list\",\n                \"args\": \n                {\n                    \"doctype\": \"Task\",\n                    \"filters\": \n                        [\n                            ['customer', \"=\",frm.doc.customer], \n                            ['created_date', \"between\", [yr+'-'+mnth+'-'+\"01\",yr+'-'+mnth+'-'+day]],\n                            ['status',\"=\",[\"UnAssigned\",\"Open\",\"Working\",\"Pending Review\",\"Overdue\",\"Completed\"]]\n                        ],\n                    \"fields\":[\"name\",\"status\"]\n       \n                },\n                callback:function(d)\n                {\n                    if(d.message[0])\n                    {\n                        $.each(d.message,function(i,item)\n                        {\n                            // a[i]=item.name;\n                            b[i]=item.status;\n                            // s[i]=item.subject;\n                            // duetime[i]=item.employee_due_time;\n                            // actualtime[i]=item.employee_actual_time;\n                        });\n                    //     console.log(\"a1\",a);\n\t                   // console.log(\"b1\",b);\n\t                                    //||Open\",\"Working\",\"Pending Review\",\"Overdue\")\n\t                    if(b.includes(\"UnAssigned\")||b.includes(\"Open\")||b.includes(\"Working\")||b.includes(\"Pending Review\")||b.includes(\"Overdue\")||b.includes(\"Billed Not Paid\")||b.includes(\"Paid\"))\n\t                    {\n\t                         dx_sales_invoice.hide(); \n\t                    }\n\t                    else\n\t                    {\n\t                      dx_sales_invoice.show(); \n\t                    }\n                    }\n                    else\n                    {\n                         dx_sales_invoice.hide(); \n                    }\n                    \n                }\n            });\n\t    }\n\t    else\n\t    {\n\t        console.log(\"case19\")\n\t         dx_sales_invoice.hide(); \n\t    }\n   },\n\t \n\tstatus:function(frm)\n\t{\n\t   if(frm.doc.status===\"UnAssigned\")\n\t    {\n\t         frm.set_value(\"assigned_to\",undefined);\n\t          frm.set_value(\"due_date\",undefined);\n\t           frm.set_value(\"employee_due_time\",undefined);\n\t           //refresh_field(\"assigned_to\");\n\t           //refresh_field(\"due_date\");\n\t           //refresh_field(\"due_time_in_hours\");\n\t    } \n\t    if(frm.doc.status===\"Completed\"||frm.doc.status===\"Pending Review\")\n\t    {\n\t        if(frm.doc.not_completed===1)\n\t        {\n\t            msgprint(\"Please update timesheet first\");\n\t            \n\t            frm.disable_save();\n\t        }\n\t        else\n\t        {\n\t            if(frm.doc.assigned_to !==undefined)\n\t            {\n\t                frm.set_value(\"completed_by\",frm.doc.assigned_to);\n\t                frm.set_value(\"completed_on\",frappe.datetime.nowdate());\n\t            }\n\t            frm.enable_save();\n\t        }\n\t    }\n\t   \n\t    \n\t    \n\t     button_click=\"normal\";\n\t    \n\t},\n\t\n\tbefore_save:function(frm)\n    { \n        console.log(\"before_save\"+\"--------\"+assigned_to1+\"---\"+frm.doc.employee_email)\n        \n        var datetime2\n        var newdate1\n        if(frm.doc.company1==\"Confederate In\")\n        {\n            const d = new Date();\n            var hr  =  d.getHours();//getting hour part from today's date.\n            var min =  d.getMinutes();//getting minutes part from today's date.\n            var sec =  d.getSeconds();//getting seconds part from today's date.\n            var newtime1=hr+\":\"+min+\":\"+sec;\n            newdate1=frappe.datetime.now_date(); \n            datetime2=newdate1+\" \"+newtime1\n        }\n        else\n        {\n            datetime2=frappe.datetime.now_datetime();\n        }\n        \n        if(frm.doc.subject1 !=undefined)\n        {\n            if(frm.doc.subject1.length>0)\n            {\n                if(assigned_to1!=undefined)\n                {\n                    if(frm.doc.assigned_time !=undefined)\n                    {\n                        if(assigned_to1!=frm.doc.employee_email)\n                        {\n                            \n                            frm.set_value(\"assigned_time\",datetime2);\n                        }\n                    }\n                    else\n                    {\n                        frm.set_value(\"assigned_time\",datetime2);\n                    }\n                    \n                    // frm.set_value(\"status\",\"Open\");\n                }\n                else\n                {\n                     frm.set_value(\"status\",\"Open\");\n                     frm.set_value(\"assigned_time\",undefined);\n                }\n                \n                var currentDate = new Date();\n                var currentDateString = currentDate.toISOString().split('T')[0];\n                \n                frm.set_value(\"actual_time1\",frm.doc.employee_actual_time)\n                frm.set_value(\"extra_time1\",frm.doc.employee_extratime)\n                frm.set_value(\"completed_on\",currentDateString)\n            }\n            else\n            {\n                // frm.set_value(\"status\",\"UnAssigned\");\n                frm.set_value(\"assigned_time\",undefined);\n            }\n        }\n        else\n        {\n            // frm.set_value(\"status\",\"UnAssigned\");\n            frm.set_value(\"assigned_time\",undefined);\n        }\n         \n    },\n\n\tafter_save:function(frm)\n\t{\n\t    emply=[];\n        emply_email=[];\n\t    \n\t    if(status1 !=frm.doc.status)\n\t    {\n\t        frm.reload_doc();\n\t    }\n\t },\n\t \n\t \n\t assigned_to1:function(frm)\n\t {\n\t     frm.set_value(\"status\",\"Open\")\n\t }\n});\nvar old_task=\"Dont exist\";\nvar newdate1;\nvar newdate2;\nvar dt1;\nvar dt2;\nvar s1;\nvar m1;\nvar h1;\nvar fromactivity;\n\n// frappe.ui.form.on('Task Timesheet', \n// {\n    \n//     // start:function(frm,cdt,cdn)\n//     //  {\n//     //     button_click=\"Timesheet\";\n//     //     var d1=locals [cdt][cdn];\n        \n//     //     frappe.call\n//     //     ({\n//     //         \"method\":\"frappe.client.get_list\",\n//     //         \"args\":\n//     //         {\n//     //             \"doctype\":\"Task\",\n//     //             \"filters\":\n//     //                 \t{\n//     //                     \t\"assigned_to\":frm.doc.assigned_to,\n// \t\t\t\t// \t\t\t //\"status\":\"Open\",\n// \t\t\t\t// \t\t\t \"not_completed\":1,\n//     //                     },\n//     //             },\n//     //             callback:function(r)\n//     //             {\n//     //                 if(r.message[0])\n//     //                 {\n    \n//     //                     // msgprint(\"Please complete the task \"+r.message[0].name);\n//     //                     msgprint(\"Please complete the task \"+r.message[0].name.link(\"https://cf.erpeaz.com/app/task/\"+r.message[0].name));\n        \n                        \n//     //                      //frappe.msgprint(<a href=\"https://cf.erpeaz.com/app/task/CA/\"+r.message[0].name target=\"blank\">+r.message[0].name+</a>)\n                        \n//     //                     //frappe.msgprint(__('Print Failure Insufficient Stock for Item:<a href=\"/desk#Form/Item/{0}\">{0}</a> ',\"VAT Amendment\"));\n                        \n//     //                     // frappe.msgprint(__('Print Failure Insufficient Stock for Item:'<a \"href\"=\"/desk/Service/\"+r.message[0].name>\"xxx\"</a>,\"VAT Amendment\"));\n                        \n//     //                     fromactivity=\"true\";\n//     //                     if(frm.doc.time_sheet.length>0)\n//     //                     {\n//     //                         c=frm.doc.time_sheet.length-1;\n//     //                     }\n//     //                     else\n//     //                     {\n//     //                         c=0;\n//     //                     }\n//     //                     cur_frm.get_field(\"time_sheet\").grid.grid_rows[c].remove();\n//     //                     frm.refresh_field('time_sheet');\n    \n//     //                 }\n//     //                 else\n//     //                 {\n//     //                     if(d1.from_time ===undefined||null)\n//     //                     {\n//     //                         // if(d1.activity_type===undefined|| d1.activity_type ===\"\")\n//     //                         // {\n//     //                         //     msgprint(\"Please select activity\");\n                                \n//     //                         // }\n//     //                         // else\n//     //                         // {   \n                         \n                                \n//     //                             frm.set_df_property(\"timer\",\"hidden\",0);\n//     //                             frm.set_value(\"timeleft\",\"1\");\n                    \n//     //                             var newtime1;\n//     //                             if(frm.doc.company==\"Confederate In\")\n//     //                             {\n//     //                               const d = new Date();\n//     //             \t\t           var hr  =  d.getHours();//getting hour part from today's date.\n//     //                               var min =  d.getMinutes();//getting minutes part from today's date.\n//     //                               var sec =  d.getSeconds();//getting seconds part from today's date.\n//     //             \t\t            newtime1=hr+\":\"+min+\":\"+sec;\n//     //             \t\t           newdate1=frappe.datetime.now_date(); \n//     //             \t\t           frappe.model.set_value(cdt,cdn,\"from_time\",newdate1+\" \"+newtime1);\n//     //             \t\t           frm.set_value(\"start_time\",newdate1+\" \"+newtime1);\n//     //                             }\n//     //                             else\n//     //                             {\n//     //                                 newdate1=frappe.datetime.now_datetime();\n//     //                                 frappe.model.set_value(cdt,cdn,\"from_time\",frappe.datetime.now_datetime());\n//     //                                 frm.set_value(\"start_time\",frappe.datetime.now_datetime());\n//     //                             }\n                                \n//     //                             frm.set_value(\"status\",\"Working\");\n//     //                             refresh_field(\"from_time\");\n//     //                             refresh_field(\"start_time\");\n                                \n//     //                             console.log(\"fromtime\",newdate1);\n                              \n//     //                             // frappe.model.set_value(cdt,cdn,\"pending\",1);\n//     //                              frm.set_value(\"not_completed\",1);\n//     //                              frm.set_value(\"timeleft\",1);\n//     //                             frm.save();\n                                \n//     //                         //}\n                             \n//     //                     }\n//     //                 }\n//     //             }\n//     //     });\n        \n        \n        \n        \n        \n//     //     button_click=\"Timesheet\";\n        \n        \n//     // },\n   \n//     stop:function(frm,cdt,cdn)\n//     {\n//          var d2=locals[cdt][cdn];\n//         if(d2.to_time ===undefined)\n//         {\n//         //   if((d2.activity_type !==undefined)&&(d2.from_time !==undefined))\n//         //     {  \n//                 if(frm.doc.company==\"Confederate In\")\n//                 {\n//                   const d = new Date();\n// \t\t           var hr  =  d.getHours();//getting hour part from today's date.\n//                   var min =  d.getMinutes();//getting minutes part from today's date.\n//                   var sec =  d.getSeconds();//getting seconds part from today's date.\n// \t\t           var newtime1=hr+\":\"+min+\":\"+sec;\n// \t\t           newdate2=frappe.datetime.now_date(); \n// \t\t           frappe.model.set_value(cdt,cdn,\"to_time\",newdate2+\" \"+newtime1);\n//                 } \n//                 else\n//                 {\n// \t\t          frappe.model.set_value(cdt,cdn,\"to_time\",frappe.datetime.now_datetime());\n//                 }\n               \n//                      var dt1_date=d2.from_time.split(\" \")[0];\n//                     var dt1_time=d2.from_time.split(\" \")[1];\n//                     var dt1_day=dt1_date.split(\"-\")[2];\n//                     var dt1_month=dt1_date.split(\"-\")[1];\n//                     var dt1_yr=dt1_date.split(\"-\")[0];\n//                     var newdatetime1=dt1_month+\"-\"+dt1_day+\"-\"+dt1_yr+\" \"+dt1_time;\n//                     var new_dt1=new Date(newdatetime1);\n//                     var new_dt1_in_sec=new_dt1.getTime();\n//                     console.log(\"new_dt1_in_sec\",new_dt1_in_sec);\n                    \n                    \n//                     var dt2_date=d2.to_time.split(\" \")[0]\n//                     var dt2_time=d2.to_time.split(\" \")[1]\n//                     var dt2_day=dt2_date.split(\"-\")[2];\n//                     var dt2_month=dt2_date.split(\"-\")[1];\n//                     var dt2_yr=dt2_date.split(\"-\")[0];\n//                     var newdatetime2=dt2_month+\"-\"+dt2_day+\"-\"+dt2_yr+\" \"+dt2_time;\n//                     var new_dt2=new Date(newdatetime2);\n//                     var new_dt2_in_sec=new_dt2.getTime();\n//                     console.log(\"new_dt2_in_sec\",new_dt2_in_sec);\n                    \n//                     var timediff_in_sec=new_dt2_in_sec-new_dt1_in_sec;\n//                     var timediff_in_hour=timediff_in_sec/3600000;\n//                     // frappe.model.set_value(cdt,cdn,\"hours\",flt(timediff_in_hour,3));  \n//                     //  refresh_field(\"hours\");  \n//                      frappe.model.set_value(cdt,cdn,\"hours1\",flt(timediff_in_hour,3)); \n//                       refresh_field(\"hours1\");  \n                   \n                   \n//               frm.set_value(\"not_completed\",0);\n                \n//                 if(frm.doc.time_sheet.length>0)\n// \t            {\n\t        \n// \t                for(var i=0;i<frm.doc.time_sheet.length;i++)\n// \t                {\n// \t                    totaltime=flt(totaltime,4)+flt(frm.doc.time_sheet[i].hours1,4);\n// \t                    frm.set_value(\"employee_actual_time\",flt(totaltime,4));\n// \t                    refresh_field(\"employee_actual_time\");\n// \t                }\n// \t                totaltime=0;\n// \t            }\n                \n//                 var x=flt(frm.doc.employee_actual_time)-flt(frm.doc.employee_due_time)\n// \t            if(flt(x)>0)\n// \t             {\n// \t                 frm.set_value(\"employee_extratime\",flt(x));\n// \t             }\n// \t             else\n// \t             {\n// \t                frm.set_value(\"employee_extratime\",\"0\");\n// \t             }\n\t             \n// \t             refresh_field(\"employee_extratime\");\n// \t             frappe.call\n//                     ({\n//                         \"method\":\"frappe.client.get_list\",\n//                         \"args\":\n//                         {\n//                             \"doctype\":\"Timesheet\",\n//                             \"filters\":\n//                             \t{\n//                                 \t\"employee\":e,\n//         \t\t\t\t\t\t\t \"date\":d2.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[2],\n//         \t\t\t\t\t\t\t \"status\":\"Draft\",\n//                                 },\n//                         },\n//                         callback:function(r)\n//                         {\n//                             if(r.message[0])\n//                             {\n//         \t                    frappe.call\n//         \t                    ({\n//                                     \"method\":\"timesheet_row_add\",\n//                                     \"args\":{\n//                                              timesheet:r.message[0].name,\n//                                              date :d2.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[2],\n//                                              employee:e,\n//                                              activity_type:d2.activity_type,\n//                                              task:frm.doc.name,\n//                                              customer:frm.doc.customer,\n//                                              from_time:d2.from_time,\n//                                              to_time:d2.to_time,\n//                                              hours:d2.hours1,\n                                             \n//                                             },\n//                                 });\n        \n//                             }\n//                             else\n//                             {\n//                                  frappe.db.insert\n//         \t                       ({\n//                                     doctype:'Timesheet',    \n//                                     date:d2.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+d2.to_time.split(\" \")[0].split(\"-\")[2],\n//                                     employee:e,\n//                                     time_logs:\n//                                     [\n//                                       {\n//                                         'activity_type':d2.activity_type,\n//                                         'task':frm.doc.name,\n//                                         'customer':frm.doc.customer,\n//                                         'from_time':d2.from_time,\n//                                         'to_time':d2.to_time,\n//                                         'hours':d2.hours1,\n//                                       },\n//                                     ]\n//                                     });\n//                             }\n//                         }\n//                     });\n//                      frm.set_value(\"timeleft\",\"0\");\n//                      frm.set_df_property(\"timer\",\"hidden\",1);\n        \t             \n        \t             \n//         \t             cur_frm.save();      \n//                   // }\n                    \n                    \n//         }\n                \n    \n        \n//         button_click=\"Timesheet\";\n\t        \t\t\t \n//     },\n  \n//     time_sheet_add:function(frm,cdt,cdn)\n//     {\n//       var dt=locals[cdt][cdn]\n//       $.each(frm.doc.time_sheet, function(i, v) \n//       {\n//           if(v.idx==frm.doc.time_sheet.length-1)\n//           {\n//               if(v.to_time===undefined)\n//               {\n//                 frm.set_value(\"not_completed\",0);\n//                 button_click=\"Timesheet\";\n//                 frm.set_value(\"timeleft\",\"0\");\n                \n//                 if(frm.doc.company==\"Confederate In\")\n//                 {\n//                   const d = new Date();\n// \t\t           var hr  =  d.getHours();//getting hour part from today's date.\n//                   var min =  d.getMinutes();//getting minutes part from today's date.\n//                   var sec =  d.getSeconds();//getting seconds part from today's date.\n// \t\t           var newtime1=hr+\":\"+min+\":\"+sec;\n// \t\t           newdate2=frappe.datetime.now_date(); \n// \t\t           frappe.model.set_value(v.doctype,v.name,\"to_time\",newdate2+\" \"+newtime1);\n//                 } \n//                 else\n//                 {\n// \t\t          frappe.model.set_value(v.doctype,v.name,\"to_time\",frappe.datetime.now_datetime());\n//                 }\n//                     var dt1_date=v.from_time.split(\" \")[0];\n//                     var dt1_time=v.from_time.split(\" \")[1];\n//                     var dt1_day=dt1_date.split(\"-\")[2];\n//                     var dt1_month=dt1_date.split(\"-\")[1];\n//                     var dt1_yr=dt1_date.split(\"-\")[0];\n//                     var newdatetime1=dt1_month+\"-\"+dt1_day+\"-\"+dt1_yr+\" \"+dt1_time;\n//                     var new_dt1=new Date(newdatetime1);\n//                     var new_dt1_in_sec=new_dt1.getTime();\n//                     console.log(\"new_dt1_in_sec\",new_dt1_in_sec);\n                    \n                    \n//                     var dt2_date=v.to_time.split(\" \")[0]\n//                     var dt2_time=v.to_time.split(\" \")[1]\n//                     var dt2_day=dt2_date.split(\"-\")[2];\n//                     var dt2_month=dt2_date.split(\"-\")[1];\n//                     var dt2_yr=dt2_date.split(\"-\")[0];\n//                     var newdatetime2=dt2_month+\"-\"+dt2_day+\"-\"+dt2_yr+\" \"+dt2_time;\n//                     var new_dt2=new Date(newdatetime2);\n//                     var new_dt2_in_sec=new_dt2.getTime();\n//                     console.log(\"new_dt2_in_sec\",new_dt2_in_sec);\n                    \n//                     var timediff_in_sec=new_dt2_in_sec-new_dt1_in_sec;\n//                     var timediff_in_hour=timediff_in_sec/3600000;\n//                     // frappe.model.set_value(v.doctype,v.name,\"hours\",flt(timediff_in_hour,3));  \n//                     // refresh_field(\"hours\");  \n//                      frappe.model.set_value(v.doctype,v.name,\"hours1\",flt(timediff_in_hour,3)); \n//                      refresh_field(\"hours1\");  \n//                     cur_frm.save(); \n             \n//                 $.each(frm.doc.time_sheet,function(i1,v1)\n//                 {\n// \t\t              if(v1.idx==frm.doc.time_sheet.length-1)\n// \t\t              {\n// \t\t                   frappe.call\n//                           ({\n//                                 \"method\":\"frappe.client.get_list\",\n//                                 \"args\":\n//                                     {\n//                                         \"doctype\":\"Timesheet\",\n//                                         \"filters\":\n//                     \t                    {\n//                         \t                    \"employee\":e,\n// \t\t\t\t\t\t\t                    \"date\":v1.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[2],\n// \t\t\t\t\t\t\t                    \"status\":\"Draft\",\n//                                              },\n//                                     },\n//                                 callback:function(r)\n//                                 {\n//                                     if(r.message[0])\n//                                     {\n// \t                                    frappe.call\n// \t                                    ({\n//                                             \"method\":\"timesheet_row_add\",\n//                                             \"args\":\n//                                             {\n//                                                 timesheet:r.message[0].name,\n//                                                 date :v1.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[2],\n//                                                 employee:e,\n//                                                 activity_type:v1.activity_type,\n//                                                 task:frm.doc.name,\n//                                                 customer:frm.doc.customer,\n//                                                 from_time:v1.from_time,\n//                                                 to_time:v1.to_time,\n//                                                 //hours:flt(timediff_in_hour,3),\n//                                                 hours:v1.hours1,\n//                                             },\n//                                         });\n\n//                                     }\n//                                     else\n//                                     {\n//                                          frappe.db.insert\n//                 \t                       ({\n//                                             doctype:'Timesheet',    \n//                                             date:v1.to_time.split(\" \")[0].split(\"-\")[0]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[1]+\"-\"+v1.to_time.split(\" \")[0].split(\"-\")[2],\n//                                             employee:e,\n//                                             time_logs:\n//                                             [\n//                                               {\n//                                                 'activity_type':v1.activity_type,\n//                                                 'task':frm.doc.name,\n//                                                 'customer':frm.doc.customer,\n//                                                 'from_time':v1.from_time,\n//                                                 'to_time':v1.to_time,\n//                                                 //'hours':flt(timediff_in_hour,3),\n//                                                 'hours':v1.hours1,\n//                                               },\n//                                             ]\n//                                             });\n//                                     }\n//                 }\n//                             });\n//                       }\n//                 })\n                \n//                  if(frm.doc.time_sheet.length>0)\n// \t            {\n\t        \n// \t                for(var i=0;i<frm.doc.time_sheet.length;i++)\n// \t                {\n// \t                   // console.log(frm.doc.time_sheet[i].hours);\n// \t                    totaltime=flt(totaltime,4)+flt(frm.doc.time_sheet[i].hours,4);\n// \t                    frm.set_value(\"employee_actual_time\",flt(totaltime,4));\n// \t                    refresh_field(\"employee_actual_time\");\n// \t                    //console.log(\"totaltime\",totaltime);\n// \t                }\n// \t               totaltime=0;\n\t               \n\t              \n// \t                    var x=flt(frm.doc.employee_actual_time)-flt(frm.doc.employee_due_time)\n// \t                       if(flt(x)>0)\n// \t                       {\n// \t                            frm.set_value(\"employee_extratime\",flt(x));\n// \t                       }\n// \t                       else\n// \t                       {\n// \t                           frm.set_value(\"employee_extratime\",\"0\");\n// \t                       }\n\t                    \n// \t                       refresh_field(\"employee_extratime\");\n// \t               }\n   \n//               }\n//           }\n//       })\n//       button_click=\"Timesheet\";\n//     },\n    \n//     time_sheet_remove:function(frm,cdt,cdn)\n//     {\n//         if(fromactivity !==\"true\")\n//         {\n//             fromactivity=undefined;\n//             frm.set_value(\"timeleft\",\"0\");\n//             //timeleft=0;   \n//             frm.set_value(\"not_completed\",0);\n//             frm.save();\n//         }\n//     },\n    \n//     // activitytimer:function(frm)\n//     // {\n//     //     timeleft=undefined;\n//     //      var timerVariable = setInterval(countUpTimer, 1000);\n//     //      var totalSeconds = 0;\n        \n//     //      function countUpTimer()\n//     //      {\n//     //         ++totalSeconds;\n//     //         var hour = Math.floor(totalSeconds / 3600);\n//     //         var minute = Math.floor((totalSeconds - hour * 3600) / 60);\n//     //         var seconds = totalSeconds - (hour * 3600 + minute * 60);\n//     //         frm.set_value(\"timer1\",hour + \":\" + minute + \":\" + seconds);\n//     //         frm.set_value(\"timer\",hour + \":\" + minute + \":\" + seconds);\n\n//     //         if(timeleft <= 0)\n//     //         {\n//     //             frm.set_value(\"timer1\",undefined);\n//     //             frm.set_value(\"timer\",undefined);\n//     //             clearInterval(timerVariable);\n//     //         }\n//     //      }\n//     // }\n    \n    \n// })\n\n\n\n    \n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expense Claim",
  "enabled": 1,
  "modified": "2024-03-05 09:25:37.492265",
  "name": "Expense Claim-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Expense Claim', {\n    employee: function(frm) {\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                doctype: 'Employee',\n                filters: {\n                    employee: frm.doc.employee\n                },\n                fieldname: ['expense_approver']\n            },\n            callback: function(r) {\n                if (r.message) {\n                    frm.set_value('expense_approver', r.message.expense_approver);\n                } \n                // else {\n                //     frappe.msgprint('Employee document not found');\n                // }\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2024-03-06 13:33:49.134416",
  "name": "Timesheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Timesheet', {\n    refresh(frm) {\n        setTimeout(() => {\n            frm.remove_custom_button('Start Timer');\n            frm.remove_custom_button('Resume Timer');\n        },0.9);\n    },\n     onload(frm) {\n        setTimeout(() => {\n            frm.remove_custom_button('Start Timer');\n            frm.remove_custom_button('Resume Timer');\n        },0.9);\n    }\n});",
  "view": "Form"
 }
]